{"version":3,"sources":["../webpack/bootstrap","pages/Contract.jsx","context/GlobalContext.js","images/resvault.png","pages/Home.jsx","images/icons/arrow-back.svg","pages/SignUp.jsx","pages/Login.jsx","pages/Dashboard.jsx","App.js","reportWebVitals.js","index.js","images/logos/graphql.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","this","oldJsonpFunction","slice","Contract","publicKey","privateKey","keyPairs","generateKeyPair","setPublicKey","setPrivateKey","selectedKeyPairIndex","setSelectedKeyPairIndex","setSelectedKeyPair","setIsAuthenticated","deleteKeyPair","appendKeyPairs","alert","setAlert","serviceMode","toggleServiceMode","ownerAddress","setOwnerAddress","useContext","GlobalContext","tabId","setTabId","useState","domain","setDomain","selectedNet","setSelectedNet","completeUrl","setCompleteUrl","customUrl","setCustomUrl","isCopied","setIsCopied","isConnected","setIsConnected","faviconUrl","setFaviconUrl","nets","setNets","showModal","setShowModal","newNetName","setNewNetName","protocol","setProtocol","setError","jsonFileName","setJsonFileName","keyPairFileInputRef","useRef","navigate","useNavigate","solidityFileName","setSolidityFileName","solidityContent","setSolidityContent","deployJsonFileName","setDeployJsonFileName","deployJsonContent","setDeployJsonContent","deployError","setDeployError","showContractModal","setShowContractModal","contractAddress","setContractAddress","copyMessage","setCopyMessage","showDeleteModal","setShowDeleteModal","isAddressCopied","setIsAddressCopied","defaultOptions","loop","autoplay","animationData","require","rendererSettings","preserveAspectRatio","renderer","modalOptions","generateOwnerAddress","decodedPublicKey","Base58","decode","addressHash","keccak256","Buffer","from","concat","setDomainConnectionStatus","net","chrome","storage","local","connections","set","getDomainConnectionStatus","callback","useEffect","tabs","query","active","currentWindow","url","currentTab","id","currentDomain","URL","hostname","getBaseDomain","connected","runtime","sendMessage","action","response","storedNets","JSON","parse","localStorage","getItem","activeNetUrl","customNet","find","replace","switchNetwork","newCompleteUrl","selectedNetwork","split","log","handleCustomUrlChange","newUrl","deployJsonFileInputRef","solidityFileInputRef","disconnectDueToKeysChange","_jsxs","_Fragment","children","_jsx","className","Lottie","options","height","width","onClick","style","background","color","fontWeight","outline","borderStyle","cursor","back","remove","title","ExitToAppIcon","map","filteredNets","filter","setItem","stringify","removeNet","placeholder","onChange","toggleProtocol","newProtocol","FontAwesomeIcon","icon","faLock","faUnlock","graphql","alt","addNet","trim","isOpen","fullUrl","newNets","closeAlertModal","checked","readOnly","handleAddressClick","address","tempInput","body","select","execCommand","removeChild","htmlFor","toggleConnection","newConnectionStatus","onError","handleFaviconError","onDragEnter","preventDefault","stopPropagation","onDragOver","onDrop","file","dataTransfer","files","endsWith","reader","FileReader","readAsText","current","click","ref","display","accept","json","arguments","contract_name","switchKeyPair","index","Number","keyPair","ownerAddr","DeleteIcon","handleCopyOwnerAddress","ContentCopyIcon","handleDownloadKeyPair","dataStr","encodeURIComponent","downloadAnchorNode","DownloadIcon","handleGenerateKeyPair","AddCircleOutlineIcon","handleDownloadAllKeyPairs","allKeyPairs","_ref","SaveAltIcon","handleKeyPairFileClick","UploadIcon","Array","isArray","handleDeleteKeyPair","handleDeploy","args","soliditySource","deployConfig","success","disabled","backgroundColor","justifyContent","textShadow","fontSize","versionData","version","createContext","GlobalProvider","setServiceMode","values","setValues","password","showPassword","confirmValues","setConfirmValues","loginValues","setLoginValues","setKeyPairs","isAuthenticated","storedPassword","setStoredPassword","saveKeyPairsToStorage","encryptedKeyPairs","CryptoJS","AES","encrypt","toString","sync","loadKeyPairsFromStorage","decryptedData","decrypt","enc","Utf8","decryptedKeyPairs","saveSelectedKeyPairIndex","loadedKeyPairs","Provider","nacl","sign","newPublicKey","encode","newPrivateKey","secretKey","newKeyPair","existingKeyPairs","some","existingKey","updatedKeyPairs","newIndex","encryptedPrivateKey","store","hash","SHA256","Hex","history","newKeyPairs","decodedPrivateKey","derivedKeyPair","fromSeed","uniqueNewKeyPairs","newKey","newMode","Home","res","bytes","state","splash","handleSignup","SignUp","showPasswordMismatchModal","setShowPasswordMismatchModal","shouldGenerateKeyPair","setShouldGenerateKeyPair","border","boxShadow","backicon","method","onSubmit","async","Input","prop","_objectSpread","disableUnderline","required","endAdornment","InputAdornment","position","IconButton","handleClickShowPassword","onMouseDown","Visibility","VisibilityOff","handleConfirmPasswordChange","handleClickShowConfirmPassword","PasswordStrengthBar","closeModal","Login","showPasswordErrorModal","setShowPasswordErrorModal","decryptedKeyPairsString","parseError","keyPairIndex","findIndex","kp","clear","removeItem","Dashboard","fileInputRef","transactionData","setTransactionData","transactionError","setTransactionError","showSuccessModal","setShowSuccessModal","successResponse","setSuccessResponse","isIdCopied","setIsIdCopied","postTransaction","handleIdClick","transactionId","asset","recipientAddress","amount","handleFileClick","handleCopyPublicKey","uploadedKeyPairs","handleSubmit","App","Routes","Route","path","element","Navigate","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode","MemoryRouter"],"mappings":"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","file":"static/js/main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"static/js/\" + ({}[chunkId]||chunkId) + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = this[\"webpackJsonpresvault\"] = this[\"webpackJsonpresvault\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([254,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS\n * OF ANY KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.    \n */\n\n/*global chrome*/\nimport '../css/App.css';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport Lottie from 'react-lottie';\nimport versionData from '../data/version.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faUnlock } from '@fortawesome/free-solid-svg-icons';\nimport graphql from \"../images/logos/graphql.png\";\nimport { GlobalContext } from '../context/GlobalContext';\nimport { useNavigate } from 'react-router-dom';\nimport { keccak256 } from 'js-sha3';\nimport Base58 from 'bs58';\n\nfunction Contract() {\n    const {\n        publicKey,\n        privateKey,\n        keyPairs,\n        generateKeyPair,\n        setPublicKey,\n        setPrivateKey,\n        selectedKeyPairIndex,\n        setSelectedKeyPairIndex,\n        setSelectedKeyPair,\n        setIsAuthenticated,\n        deleteKeyPair,\n        appendKeyPairs, \n        alert, // For alert modal\n        setAlert, // For alert modal\n        serviceMode,\n        toggleServiceMode,\n        ownerAddress,\n        setOwnerAddress,\n    } = useContext(GlobalContext);\n\n    const [tabId, setTabId] = useState(null);\n    const [domain, setDomain] = useState('');\n    const [selectedNet, setSelectedNet] = useState('');\n    const [completeUrl, setCompleteUrl] = useState('');\n    const [customUrl, setCustomUrl] = useState('');\n    const [isCopied, setIsCopied] = useState(false);\n    const [isConnected, setIsConnected] = useState(false);\n    const [faviconUrl, setFaviconUrl] = useState('');\n    const [nets, setNets] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [newNetName, setNewNetName] = useState('');\n    const [protocol, setProtocol] = useState('http');\n    const [error, setError] = useState('');\n    const [jsonFileName, setJsonFileName] = useState('');\n    const fileInputRef = useRef(null);\n    const keyPairFileInputRef = useRef(null);\n    const navigate = useNavigate();\n\n    // New State Variables for Deployment\n    const [solidityFileName, setSolidityFileName] = useState('');\n    const [solidityContent, setSolidityContent] = useState('');\n    const [deployJsonFileName, setDeployJsonFileName] = useState('');\n    const [deployJsonContent, setDeployJsonContent] = useState('');\n    const [deployError, setDeployError] = useState('');\n    const [showContractModal, setShowContractModal] = useState(false);\n    const [contractAddress, setContractAddress] = useState('');\n    const [copyMessage, setCopyMessage] = useState('');\n\n    // Add the missing state declaration\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n    // State for copying Contract Address\n    const [isAddressCopied, setIsAddressCopied] = useState(false);\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: require('../images/bg.json'),\n        rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice',\n        renderer: 'svg'\n        }\n    };\n\n    const modalOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: require('../images/modal.json'),\n        rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice',\n        renderer: 'svg'\n        }\n    };\n\n    // Function to generate owner's address\n    const generateOwnerAddress = (publicKey) => {\n        const decodedPublicKey = Base58.decode(publicKey);\n        const addressHash = keccak256(Buffer.from(decodedPublicKey));\n        const address = `0x${addressHash.slice(-40)}`;\n        return address;\n    };\n\n    // Function to get full hostname from URL\n    function getBaseDomain(url) {\n        try {\n        const urlObj = new URL(url);\n        return urlObj.hostname;\n        } catch (error) {\n        console.error('Invalid URL:', url);\n        return '';\n        }\n    }\n\n    // Function to set connection status per domain and net\n    const setDomainConnectionStatus = (domain, net, isConnected) => {\n        chrome.storage.local.get(['connections'], (result) => {\n        let connections = result.connections || {};\n        if (!connections[domain]) {\n            connections[domain] = {};\n        }\n        connections[domain][net] = isConnected;\n        chrome.storage.local.set({ connections });\n        });\n    };\n\n    // Function to get connection status per domain and net\n    const getDomainConnectionStatus = (domain, net, callback) => {\n        chrome.storage.local.get(['connections'], (result) => {\n        const connections = result.connections || {};\n        const domainConnections = connections[domain] || {};\n        const isConnected = domainConnections[net] || false;\n        callback(isConnected);\n        });\n    };\n\n    useEffect(() => {\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        if (tabs.length > 0 && tabs[0].url) {\n            const currentTab = tabs[0];\n            setTabId(currentTab.id);\n\n            const currentDomain = getBaseDomain(currentTab.url);\n            setDomain(currentDomain);\n\n            // Ensure selectedNet is set before checking connection status\n            if (selectedNet) {\n            getDomainConnectionStatus(currentDomain, selectedNet, (connected) => {\n                setIsConnected(connected);\n            });\n            }\n        } else {\n            // If no active tab or no URL, set domain to 'extension'\n            setDomain('extension');\n\n            // Ensure selectedNet is set before checking connection status\n            if (selectedNet) {\n            getDomainConnectionStatus('extension', selectedNet, (connected) => {\n                setIsConnected(connected);\n            });\n            }\n        }\n        });\n    }, [selectedNet]);\n\n    useEffect(() => {\n        if (domain && selectedNet) {\n        chrome.runtime.sendMessage({ action: \"requestData\", domain: domain, net: selectedNet }, function(response) {\n            if (response && response.faviconUrl) {\n            setFaviconUrl(response.faviconUrl);\n            } else {\n            setFaviconUrl('');\n            }\n            // Handle other response data if needed\n        });\n        }\n    }, [domain, selectedNet]);\n\n    useEffect(() => {\n        const storedNets = JSON.parse(localStorage.getItem('nets')) || [];\n        setNets(storedNets);\n    }, []);\n\n    // Update useEffect to set default URLs based on serviceMode\n    useEffect(() => {\n        // Fetch active net URL from storage\n        chrome.storage.local.get(['activeNetUrl'], (result) => {\n        if (result.activeNetUrl) {\n            setCompleteUrl(result.activeNetUrl); // Use the full URL with protocol\n\n            // Check if it's one of the known networks\n            if (result.activeNetUrl === 'https://cloud.resilientdb.com/graphql' || result.activeNetUrl === 'https://contract.resilientdb.com/graphql') {\n            setSelectedNet('ResilientDB Mainnet');\n            } else if (result.activeNetUrl === 'http://localhost:8000/graphql' || result.activeNetUrl === 'http://localhost:8400/graphql') {\n            setSelectedNet('ResilientDB Localnet');\n            } else {\n            // Custom URL case\n            const customNet = nets.find(net => net.url === result.activeNetUrl);\n            if (customNet) {\n                setSelectedNet(customNet.name); // Set the name of the custom network\n            } else {\n                setSelectedNet('Custom URL');\n            }\n            // Set customUrl by stripping the protocol and /graphql part\n            setCustomUrl(result.activeNetUrl.replace(/^https?:\\/\\/|\\/graphql$/g, ''));\n            }\n        } else {\n            // No active net URL, default to ResilientDB Mainnet\n            const defaultUrl = serviceMode === 'KV' ? 'https://cloud.resilientdb.com/graphql' : 'https://contract.resilientdb.com/graphql';\n            setCompleteUrl(defaultUrl);\n            setSelectedNet('ResilientDB Mainnet'); // Ensure default network is selected\n        }\n        });\n    }, [nets, serviceMode]);\n\n    useEffect(() => {\n        if (domain && selectedNet) {\n        getDomainConnectionStatus(domain, selectedNet, (connected) => {\n            setIsConnected(connected);\n        });\n        }\n    }, [domain, selectedNet]);\n\n    const toggleProtocol = () => {\n        const newProtocol = protocol === 'http' ? 'https' : 'http';\n        setProtocol(newProtocol);\n        if (selectedNet === 'Custom URL' && customUrl) {\n        setCompleteUrl(`${newProtocol}://${customUrl}/graphql`);\n        }\n    };\n\n    const addNet = () => {\n        if (!newNetName.trim() || !customUrl.trim()) {\n        setError('Both fields are required.');\n        setAlert({ isOpen: true, message: 'Both Net Name and GraphQL URL are required.' });\n        return;\n        }\n        setError('');\n        const fullUrl = `${protocol}://${customUrl}/graphql`;\n        const newNets = [...nets, { name: newNetName, url: fullUrl }];\n        setNewNetName('');\n        setCustomUrl('');\n        setNets(newNets);\n        localStorage.setItem('nets', JSON.stringify(newNets));\n        setSelectedNet(newNetName);\n    };\n\n    const removeNet = (name) => {\n        const filteredNets = nets.filter(net => net.name !== name);\n        setNets(filteredNets);\n        localStorage.setItem('nets', JSON.stringify(filteredNets));\n    };\n\n    const toggleConnection = () => {\n        if (!publicKey || !privateKey) {\n        setAlert({ isOpen: true, message: 'Public or Private key is missing.' });\n        console.error('Public or Private key is missing');\n        return;\n        }\n\n        const newConnectionStatus = !isConnected;\n        setIsConnected(newConnectionStatus);\n\n        if (newConnectionStatus) {\n        console.log('Connecting to net:', selectedNet, 'on domain:', domain);\n        chrome.runtime.sendMessage(\n            {\n            action: 'storeKeys',\n            publicKey,\n            privateKey,\n            url: completeUrl,\n            domain: domain,\n            net: selectedNet,\n            },\n            () => {\n            setDomainConnectionStatus(domain, selectedNet, newConnectionStatus);\n            }\n        );\n        } else {\n        console.log('Disconnecting from net:', selectedNet, 'on domain:', domain);\n        chrome.runtime.sendMessage(\n            {\n            action: 'disconnectKeys',\n            domain: domain,\n            net: selectedNet,\n            },\n            () => {\n            setDomainConnectionStatus(domain, selectedNet, false);\n            }\n        );\n        }\n    };\n\n    // Update the switchNetwork function to use URLs based on serviceMode\n    const switchNetwork = (value) => {\n        if (value === 'Manage Nets') {\n        setShowModal(true);\n        } else {\n        let newCompleteUrl = '';\n        switch (value) {\n            case 'ResilientDB Mainnet':\n            newCompleteUrl = serviceMode === 'KV' ? 'https://cloud.resilientdb.com/graphql' : 'https://contract.resilientdb.com/graphql';\n            break;\n            case 'ResilientDB Localnet':\n            newCompleteUrl = serviceMode === 'KV' ? 'http://localhost:8000/graphql' : 'http://localhost:8400/graphql';\n            break;\n            case 'Custom URL':\n            if (customUrl) {\n                newCompleteUrl = `${protocol}://${customUrl}/graphql`;\n            } else {\n                newCompleteUrl = `${protocol}://`;\n            }\n            break;\n            default:\n            const selectedNetwork = nets.find(net => net.name === value);\n            if (selectedNetwork) {\n                newCompleteUrl = selectedNetwork.url;\n                setCustomUrl(selectedNetwork.url.split('://')[1].replace('/graphql', ''));\n            }\n            break;\n        }\n        setCompleteUrl(newCompleteUrl);\n        setSelectedNet(value); // Set this at the end to avoid premature updates\n\n        // Update activeNetUrl in storage using the new URL\n        chrome.storage.local.set({ activeNetUrl: newCompleteUrl }, () => {\n            console.log('Active net URL updated to', newCompleteUrl);\n        });\n        }\n    };\n\n    const handleNetworkChange = (event) => {\n        const value = event.target.value;\n        if (value === selectedNet) return; // Ignore if the value hasn't changed\n\n        if (isConnected) {\n        // Disconnect from the current network and clear domain connection status\n        chrome.runtime.sendMessage({\n            action: 'disconnectKeys',\n            domain: domain,\n            net: selectedNet\n        }, () => {\n            console.log('Disconnected from previous network');\n            setIsConnected(false);\n            setDomainConnectionStatus(domain, selectedNet, false);\n            // Proceed with switching networks\n            switchNetwork(value);\n        });\n        } else {\n        // If not connected, just switch networks\n        switchNetwork(value);\n        }\n    };\n\n    const handleCustomUrlChange = (event) => {\n        const value = event.target.value;\n        setCustomUrl(value);\n        const newUrl = `${protocol}://${value}/graphql`;\n        setCompleteUrl(newUrl);\n    };\n\n    const back = () => {\n        chrome.storage.local.remove(['password'], function() {\n          setIsAuthenticated(false);\n          navigate(\"/login\");\n        });\n    };\n\n    const handleDeleteKeyPair = () => {\n        if (keyPairs.length > 1) {\n            deleteKeyPair(selectedKeyPairIndex, () => {\n                // Reset to the first key pair after deletion\n                setSelectedKeyPairIndex(0);\n                setSelectedKeyPair(0);\n            });\n\n            // Close the delete confirmation modal\n            setShowDeleteModal(false);\n        }\n    };       \n\n    // Function to copy owner address\n    const handleCopyOwnerAddress = () => {\n        try {\n        const tempInput = document.createElement('input');\n        tempInput.value = ownerAddress;\n        document.body.appendChild(tempInput);\n        tempInput.select();\n        document.execCommand('copy');\n        document.body.removeChild(tempInput);\n        setIsCopied(true);\n        setTimeout(() => {\n            setIsCopied(false);\n        }, 1500);\n        } catch (err) {\n        setAlert({ isOpen: true, message: 'Unable to copy text.' });\n        console.error('Unable to copy text: ', err);\n        }\n    };\n\n    // Function to download key pair including owner address\n    const handleDownloadKeyPair = () => {\n        const keyPair = {\n        ownerAddress: ownerAddress,\n        publicKey: publicKey,\n        privateKey: privateKey,\n        };\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(keyPair));\n        const downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", \"keypair.json\");\n        document.body.appendChild(downloadAnchorNode); // required for firefox\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    };\n\n    // Function to download all key pairs including owner addresses\n    const handleDownloadAllKeyPairs = () => {\n        const allKeyPairs = keyPairs.map(({ publicKey, privateKey }) => {\n        const ownerAddress = generateOwnerAddress(publicKey);\n        return {\n            ownerAddress,\n            publicKey,\n            privateKey,\n        };\n        });\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(allKeyPairs));\n        const downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", \"all-keypairs.json\");\n        document.body.appendChild(downloadAnchorNode); // required for firefox\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    };\n\n    // New Handlers for Deployment\n    const handleSolidityFileUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.name.endsWith('.sol')) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                setSolidityContent(event.target.result);\n                setSolidityFileName(file.name); // Set after reading\n                setDeployError(''); // Reset error message\n            };\n            reader.readAsText(file);\n        } else {\n            setSolidityFileName('');\n            setSolidityContent('');\n            setDeployError('Please upload a valid Solidity (.sol) file.');\n            if (solidityFileInputRef.current) {\n                solidityFileInputRef.current.value = '';\n            }\n        }\n    };\n\n    const handleDeployJsonFileUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                try {\n                    const json = JSON.parse(event.target.result);\n                    // Validate JSON data\n                    if (typeof json.arguments === 'string' && typeof json.contract_name === 'string') {\n                        setDeployJsonContent(json);\n                        setDeployError('');\n                        setDeployJsonFileName(file.name); // Set file name after validation\n                    } else {\n                        setDeployJsonContent(null);\n                        setDeployError('Invalid JSON: Missing \"arguments\" and \"contract_name\"');\n                        if (deployJsonFileInputRef.current) {\n                            deployJsonFileInputRef.current.value = '';\n                        }\n                    }\n                } catch (err) {\n                    console.error('Error parsing JSON:', err);\n                    setDeployJsonContent(null);\n                    setDeployError('Invalid JSON format.');\n                    if (deployJsonFileInputRef.current) {\n                        deployJsonFileInputRef.current.value = '';\n                    }\n                }\n            };\n            reader.readAsText(file);\n        } else {\n            setDeployJsonFileName('');\n            setDeployJsonContent(null);\n            setDeployError('Please upload a valid JSON file.');\n            if (deployJsonFileInputRef.current) {\n                deployJsonFileInputRef.current.value = '';\n            }\n        }\n    };\n\n    // New Handlers for Deployment Drag and Drop\n    const handleDeployDragEnter = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    const handleDeployDragOver = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    const handleDeployDrop = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = e.dataTransfer.files[0];\n        if (file && file.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                try {\n                    const json = JSON.parse(event.target.result);\n                    // Validate JSON data\n                    if (typeof json.arguments === 'string' && typeof json.contract_name === 'string') {\n                        setDeployJsonContent(json);\n                        setDeployError('');\n                        setDeployJsonFileName(file.name); // Set file name after validation\n                    } else {\n                        setDeployJsonContent(null);\n                        setDeployError('Invalid JSON format: \"arguments\" and \"contract_name\" are required.');\n                        if (deployJsonFileInputRef.current) {\n                            deployJsonFileInputRef.current.value = '';\n                        }\n                    }\n                } catch (err) {\n                    console.error('Error parsing JSON:', err);\n                    setDeployJsonContent(null);\n                    setDeployError('Invalid JSON format.');\n                    if (deployJsonFileInputRef.current) {\n                        deployJsonFileInputRef.current.value = '';\n                    }\n                }\n            };\n            reader.readAsText(file);\n        } else {\n            setDeployJsonFileName('');\n            setDeployJsonContent(null);\n            setDeployError('Please upload a valid JSON file.');\n            if (deployJsonFileInputRef.current) {\n                deployJsonFileInputRef.current.value = '';\n            }\n        }\n    };\n\n    // Handler functions for Solidity Drag and Drop\n    const handleSolidityDragEnter = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    const handleSolidityDragOver = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    const handleSolidityDrop = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = e.dataTransfer.files[0];\n        if (file && file.name.endsWith('.sol')) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                setSolidityContent(event.target.result);\n                setSolidityFileName(file.name); // Set after reading\n                setDeployError(''); // Reset error message\n            };\n            reader.readAsText(file);\n        } else {\n            setSolidityFileName('');\n            setSolidityContent('');\n            setDeployError('Please upload a valid Solidity (.sol) file.');\n            if (solidityFileInputRef.current) {\n                solidityFileInputRef.current.value = '';\n            }\n        }\n    };\n\n    const handleFileClick = () => {\n        fileInputRef.current.click();\n    };\n\n    const handleKeyPairFileClick = () => {\n        keyPairFileInputRef.current.click();\n    };\n\n    // New Handlers for Deployment\n    const handleDeployFileClick = () => {\n        deployJsonFileInputRef.current.click();\n    };\n\n    const deployJsonFileInputRef = useRef(null);\n    const solidityFileInputRef = useRef(null);\n\n    // New Handler for Deployment\n    const handleDeploy = () => {\n        // Validate that both Solidity and JSON files are uploaded\n        if (!solidityContent || !deployJsonContent) {\n            setDeployError('Both Solidity contract and JSON configuration files are required.');\n            return;\n        }\n\n        // Ensure JSON has required fields\n        const { arguments: args, contract_name } = deployJsonContent;\n        if (!args || !contract_name) {\n            setDeployError('JSON file must contain \"arguments\" and \"contract_name\".');\n            return;\n        }\n\n        if (!isConnected) {\n            setDeployError('Please connect to a net before deploying a contract.');\n            return;\n        }\n\n        // Send deployment data to background script\n        chrome.runtime.sendMessage({\n            action: 'deployContractChain',\n            soliditySource: solidityContent,\n            deployConfig: {\n                arguments: args,\n                contract_name: contract_name\n            },\n            ownerAddress: ownerAddress,\n            domain: domain,\n            net: selectedNet\n        }, (response) => {\n            if (response.success) {\n                if (response.contractAddress) {\n                    setContractAddress(response.contractAddress);\n                    setShowContractModal(true);\n                    // Clear the uploaded files\n                    setSolidityFileName('');\n                    setSolidityContent('');\n                    setDeployJsonFileName('');\n                    setDeployJsonContent(null);\n                    setDeployError('');\n\n                    // Reset file input values\n                    if (solidityFileInputRef.current) {\n                        solidityFileInputRef.current.value = '';\n                    }\n                    if (deployJsonFileInputRef.current) {\n                        deployJsonFileInputRef.current.value = '';\n                    }\n                } else {\n                    setDeployError('Deployment succeeded but no contract address returned.');\n                }\n            } else {\n                setDeployError(response.error || 'Contract deployment failed.');\n            }\n        });\n    };\n\n    // Function to handle favicon load error\n    const handleFaviconError = () => {\n        setFaviconUrl(''); // This will trigger the globe icon to display\n    };\n\n    const disconnectDueToKeysChange = () => {\n        if (isConnected) {\n            // Disconnect from the current network and clear domain connection status\n            chrome.runtime.sendMessage({\n                action: 'disconnectKeys',\n                domain: domain,\n                net: selectedNet\n            }, () => {\n                console.log('Disconnected from previous network');\n                setIsConnected(false);\n                setDomainConnectionStatus(domain, selectedNet, false);\n            });\n        }\n    }\n\n    const switchKeyPair = (index) => {\n        setSelectedKeyPair(index);\n        disconnectDueToKeysChange();\n    };\n\n    const handleGenerateKeyPair = () => {\n        generateKeyPair(() => {\n          setSelectedKeyPairIndex(keyPairs.length - 1); // Select the newly generated key pair\n          disconnectDueToKeysChange();\n        });\n    };\n\n    // Function to close the alert modal\n    const closeAlertModal = () => {\n        setAlert({ isOpen: false, message: '' });\n    };\n\n    // Handler function for uploading key pairs\n    const handleKeyPairFileUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                try {\n                    const json = JSON.parse(event.target.result);\n                    // Assume json is an array of keyPairs or a single keyPair\n                    if (Array.isArray(json)) {\n                        appendKeyPairs(json);\n                        setAlert({ isOpen: true, message: 'Key pairs uploaded successfully.' });\n                    } else if (json.publicKey && json.privateKey) {\n                        appendKeyPairs([json]);\n                        setAlert({ isOpen: true, message: 'Key pair uploaded successfully.' });\n                    } else {\n                        setAlert({ isOpen: true, message: 'Invalid JSON format for key pair.' });\n                    }\n                } catch (err) {\n                    console.error('Error parsing key pair JSON:', err);\n                    setAlert({ isOpen: true, message: 'Invalid JSON format for key pair.' });\n                }\n            };\n            reader.readAsText(file);\n        } else {\n            setAlert({ isOpen: true, message: 'Please upload a valid JSON file.' });\n        }\n    };\n\n    const handleAddressClick = () => {\n        try {\n        const address = contractAddress;\n        const tempInput = document.createElement('input');\n        tempInput.value = address;\n        document.body.appendChild(tempInput);\n        tempInput.select();\n        document.execCommand('copy');\n        document.body.removeChild(tempInput);\n        setIsAddressCopied(true);\n        setTimeout(() => {\n            setIsAddressCopied(false);\n        }, 1500);\n        } catch (err) {\n        setDeployError('Unable to copy contract address.');\n        console.error('Unable to copy text: ', err);\n        }\n    };\n\n    return (\n        <>\n        <div className=\"lottie-background\">\n            <Lottie options={defaultOptions} height=\"100%\" width=\"100%\" />\n        </div>\n        <div className=\"page page--main\" data-page=\"buy\">\n            <header className=\"header header--fixed\">\n            <div className=\"header__inner header-container\">\n                <div className=\"header__logo header__logo--text\">\n                Res<strong>Vault</strong>\n                </div>\n                <div className=\"badge-container\">\n                <span className=\"badge\" onClick={toggleServiceMode}>\n                    {serviceMode === 'Contract' ? 'Smart Contract' : 'Key-Value'}\n                </span>\n                </div>\n                <div className=\"header__icon open-panel\">\n                <button\n                    style={{ background: 'none', color: 'white', fontWeight: 'bolder', outline: 'none', borderStyle: 'none', cursor: 'pointer' }}\n                    onClick={back}\n                    title=\"Logout\"\n                >\n                    <ExitToAppIcon />\n                </button>\n                </div>\n            </div>\n            </header>\n\n            {showModal && (\n            <div className=\"overlay\">\n                <div className=\"modal\">\n                <div className=\"lottie-modal-background\">\n                    <Lottie options={modalOptions} height=\"100%\" width=\"100%\" />\n                </div>\n                <div className=\"modal-content\">\n                    <h2>Manage Nets</h2>\n                    {nets.length > 0 && (\n                    <div className=\"table-container\">\n                        <table>\n                        <thead>\n                            <tr>\n                            <th>Net Name</th>\n                            <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {nets.map(net => (\n                            <tr key={net.name}>\n                                <td>{net.name}</td>\n                                <td>\n                                <button className=\"icon-button\" onClick={() => removeNet(net.name)} title=\"Delete Net\">\n                                    <i className=\"fas fa-trash\"></i>\n                                </button>\n                                </td>\n                            </tr>\n                            ))}\n                        </tbody>\n                        </table>\n                    </div>\n                    )}\n                    <input className=\"modal-net-input\" type=\"text\" placeholder=\"Net Name\" value={newNetName} onChange={e => setNewNetName(e.target.value)} />\n                    <div className=\"modal-url-input-container\">\n                    <div className=\"modal-url-toggle\" onClick={toggleProtocol}>\n                        <FontAwesomeIcon icon={protocol === 'https' ? faLock : faUnlock} className={`icon ${protocol === 'https' ? 'icon-green' : 'icon-red'}`} />\n                    </div>\n                    <input type=\"text\" placeholder=\"GraphQL URL\" value={customUrl} onChange={handleCustomUrlChange} className=\"modal-url-input\" />\n                    <div className=\"modal-url-fixed\">\n                        <img src={graphql} className=\"graphql-icon\" alt=\"GraphQL\"></img>\n                    </div>\n                    </div>\n                    <div className=\"save-container\">\n                        <button onClick={addNet} className=\"button-save\" title=\"Save Net\">\n                            Save\n                        </button>\n                        <button onClick={() => setShowModal(false)} className=\"button-close\" title=\"Close Modal\">\n                            Close\n                        </button>\n                    </div>\n                    {error && <p className=\"error-message\">{error}</p>}\n                </div>\n                </div>\n            </div>\n            )}\n\n            {/* Alert Modal */}\n            {alert.isOpen && (\n                <div className=\"overlay\">\n                    <div className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h2>Alert</h2>\n                            <p>{alert.message}</p>\n                            <div className=\"save-container\">\n                                <button onClick={closeAlertModal} className=\"button-save\" title=\"Okay\">\n                                    Okay\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Contract Address Modal */}\n            {showContractModal && (\n                <div className=\"overlay\">\n                    <div className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h2>Contract Deployed Successfully!</h2>\n                            <p>Contract Address:</p>\n                            <div className=\"fieldset\">\n                                <div className=\"radio-option radio-option--full\">\n                                    <input\n                                    type=\"radio\"\n                                    name=\"contractAddress\"\n                                    id=\"contractAddress\"\n                                    value={contractAddress}\n                                    checked\n                                    readOnly\n                                    onClick={handleAddressClick}\n                                    />\n                                    <label htmlFor=\"contractAddress\">\n                                    <span>{isAddressCopied ? 'Copied' : `${contractAddress.slice(0, 5)}...${contractAddress.slice(-5)}`}</span>\n                                    </label>\n                                </div>\n                            </div>\n                            <button onClick={() => setShowContractModal(false)} className=\"button-close\" title=\"Close Modal\">\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"page__content page__content--with-header page__content--with-bottom-nav\">\n            <h2 className=\"page__title\">Dashboard</h2>\n\n            <div className=\"net\">\n                <div className=\"net-header\">\n                <div className=\"select-wrapper\">\n                    <select value={selectedNet} onChange={handleNetworkChange} className=\"select\">\n                    <option value=\"ResilientDB Mainnet\">ResilientDB Mainnet</option>\n                    <option value=\"ResilientDB Localnet\">ResilientDB Localnet</option>\n                    {nets.map(net => (\n                        <option key={net.name} value={net.name}>{net.name}</option>\n                    ))}\n                    <option value=\"Manage Nets\">Manage Nets</option>\n                    </select>\n                    <i className=\"fas fa-chevron-down\"></i>\n                </div>\n\n                <div className=\"icon-container\" onClick={toggleConnection}>\n                    {faviconUrl ? (\n                    <img\n                        src={faviconUrl}\n                        alt=\"Favicon\"\n                        className={`icon ${isConnected ? 'connected' : ''}`}\n                        onError={handleFaviconError}\n                    />\n                    ) : (\n                    <i className={`fa fa-globe icon ${isConnected ? 'connected' : ''}`} aria-hidden=\"true\"></i>\n                    )}\n                    <span className=\"status-dot\"></span>\n                    <span className=\"tooltip\">{isConnected ? 'Connected' : 'Disconnected'}</span>\n                </div>\n                {selectedNet === 'Custom URL' && (\n                    <input\n                    type=\"text\"\n                    value={customUrl}\n                    onChange={handleCustomUrlChange}\n                    placeholder=\"Enter custom URL\"\n                    className=\"input\"\n                    />\n                )}\n                </div>\n\n                {/* Deploy Contract Section */}\n                <div className=\"deploy-section\">\n                    <div className=\"file-upload-row\">\n                        {/* Solidity Contract Upload */}\n                        <div className=\"file-upload\">\n                            <div\n                                className={`drag_box_outline ${solidityFileName ? 'file-uploaded' : ''}`}\n                                onDragEnter={handleSolidityDragEnter}\n                                onDragOver={handleSolidityDragOver}\n                                onDrop={handleSolidityDrop}\n                                onClick={() => solidityFileInputRef.current.click()}\n                            >\n                                <input\n                                    type=\"file\"\n                                    ref={solidityFileInputRef}\n                                    style={{ display: 'none' }}\n                                    accept=\".sol\"\n                                    onChange={handleSolidityFileUpload}\n                                />\n                                {solidityFileName ? (\n                                    <span className=\"filename\">{solidityFileName} uploaded</span>\n                                ) : (\n                                    <span className=\"filename\">Contract (.sol)</span>\n                                )}\n                            </div>\n                        </div>\n\n                        {/* JSON Configuration Upload */}\n                        <div className=\"file-upload\">\n                            <div\n                                className={`drag_box_outline ${deployJsonFileName ? 'file-uploaded' : ''}`}\n                                onDragEnter={handleDeployDragEnter}\n                                onDragOver={handleDeployDragOver}\n                                onDrop={handleDeployDrop}\n                                onClick={() => deployJsonFileInputRef.current.click()}\n                            >\n                                <input\n                                    type=\"file\"\n                                    ref={deployJsonFileInputRef}\n                                    style={{ display: 'none' }}\n                                    accept=\"application/json\"\n                                    onChange={handleDeployJsonFileUpload}\n                                />\n                                {deployJsonFileName ? (\n                                    <span className=\"filename\">{deployJsonFileName} uploaded</span>\n                                ) : (\n                                    <span className=\"filename\">Configuration (.json)</span>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                    {deployError && <p className=\"error-message\">{deployError}</p>}\n                </div>\n            </div>\n\n\n            <h2 className=\"page__title\">Select Account</h2>\n            <div className=\"net\">\n                <div className=\"keypair\">\n                    <div className=\"keypair-header\">\n                        <div className=\"select-wrapper\">\n                            <select\n                            value={selectedKeyPairIndex}\n                            onChange={(e) => switchKeyPair(Number(e.target.value))}\n                            className=\"select\"\n                            >\n                            {keyPairs.map((keyPair, index) => {\n                                const ownerAddr = generateOwnerAddress(keyPair.publicKey);\n                                return (\n                                <option key={index} value={index}>\n                                    {`${ownerAddr.slice(0, 4)}...${ownerAddr.slice(-4)}`}\n                                </option>\n                                );\n                            })}\n                            </select>\n                            <i className=\"fas fa-chevron-down\"></i>\n                        </div>\n                        <div className=\"keypair-icons\">\n                            {keyPairs.length > 1 && (\n                            <button onClick={() => setShowDeleteModal(true)} className=\"icon-button\" title=\"Delete Key Pair\">\n                                <DeleteIcon style={{ color: 'white' }} />\n                            </button>\n                            )}\n                            <button onClick={handleCopyOwnerAddress} className=\"icon-button\" title=\"Copy Owner Address\">\n                                <ContentCopyIcon style={{ color: isCopied ? 'grey' : 'white' }} />\n                            </button>\n                            <button onClick={handleDownloadKeyPair} className=\"icon-button\" title=\"Download Key Pair\">\n                                <DownloadIcon style={{ color: 'white' }} />\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"keypair-actions\">\n                        <div className=\"button-with-tooltip\">\n                            <button onClick={handleGenerateKeyPair} className=\"badge-button centered-icon\" title=\"Generate Keys\">\n                                <AddCircleOutlineIcon style={{ color: 'white' }} />\n                            </button>\n                            <span className=\"tooltip-text\">Generate Keys</span>\n                        </div>\n                        <div className=\"button-with-tooltip\">\n                            <button onClick={handleDownloadAllKeyPairs} className=\"badge-button centered-icon\" title=\"Export All Keys\">\n                                <SaveAltIcon style={{ color: 'white' }} />\n                            </button>\n                            <span className=\"tooltip-text\">Export All Keys</span>\n                        </div>\n                        <div className=\"button-with-tooltip\">\n                            <button onClick={handleKeyPairFileClick} className=\"badge-button centered-icon\" title=\"Upload Keys\">\n                                <UploadIcon style={{ color: 'white' }} />\n                            </button>\n                            <span className=\"tooltip-text\">Upload Keys</span>\n                        </div>\n                        <input\n                            type=\"file\"\n                            ref={keyPairFileInputRef}\n                            style={{ display: 'none' }}\n                            accept=\"application/json\"\n                            onChange={handleKeyPairFileUpload}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            {showDeleteModal && (\n                <div className=\"modal-overlay\">\n                    <div className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h2>Are you sure?</h2>\n                            <p>This action is irreversible and will delete the selected key pair forever.</p>\n                            <div className=\"save-container\">\n                                <button onClick={handleDeleteKeyPair} className=\"button-save\" title=\"Delete Key Pair\">\n                                    Delete\n                                </button>\n                                <button onClick={() => setShowDeleteModal(false)} className=\"button-close\" title=\"Cancel\">\n                                    Cancel\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Deploy Button */}\n            <button\n                className=\"button button--full button--main open-popup\"\n                onClick={handleDeploy}\n                title=\"Deploy Contract\"\n                disabled={!solidityContent || !deployJsonContent || !isConnected}\n            >\n                Deploy\n            </button>\n\n            <p className=\"bottom-navigation\" style={{ backgroundColor: 'transparent', display: 'flex', justifyContent: 'center', textShadow: '1px 1px 1px rgba(0, 0, 0, 0.3)', color: 'rgb(255, 255, 255, 0.5)', fontSize: '9px' }}>\n                ResVault v{versionData.version}\n            </p>\n            </div>\n        </div>\n        </>\n    );\n\n}\n\nexport default Contract;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*\n*/\n\n\n/*global chrome*/\nimport React, { createContext, useState, useEffect } from 'react';\nimport CryptoJS from 'crypto-js';\nimport { keccak256 } from 'js-sha3';\nimport nacl from 'tweetnacl';\nimport Base58 from 'bs58';\nimport { useNavigate } from 'react-router-dom';\n\nexport const GlobalContext = createContext();\n\nexport const GlobalProvider = ({ children }) => {\n  const [serviceMode, setServiceMode] = useState('KV'); // KV or Contract\n  const [values, setValues] = useState({ password: '', showPassword: false });\n  const [confirmValues, setConfirmValues] = useState({ password: '', showPassword: false });\n  const [loginValues, setLoginValues] = useState({ password: '', showPassword: false });\n  const [publicKey, setPublicKey] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n  const [ownerAddress, setOwnerAddress] = useState(''); // To store the generated owner's address\n  const [keyPairs, setKeyPairs] = useState([]);\n  const [selectedKeyPairIndex, setSelectedKeyPairIndex] = useState(0);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [storedPassword, setStoredPassword] = useState('');\n\n  const navigate = useNavigate();\n  \n  // Alert state for modals\n  const [alert, setAlert] = useState({ isOpen: false, message: '' });\n\n  // Generate owner's address\n  const generateOwnerAddress = (publicKey) => {\n    const decodedPublicKey = Base58.decode(publicKey);\n    const addressHash = keccak256(Buffer.from(decodedPublicKey));\n    const address = `0x${addressHash.slice(-40)}`;\n    return address;\n  };\n\n  // Function to encrypt and store key pairs\n  const saveKeyPairsToStorage = (keyPairs, password) => {\n    const encryptedKeyPairs = CryptoJS.AES.encrypt(\n      JSON.stringify(keyPairs),\n      password\n    ).toString();\n    chrome.storage.sync.set({ encryptedKeyPairs }, () => {\n      console.log('Encrypted key pairs saved to storage.');\n    });\n  };\n\n  // Function to load and decrypt key pairs\n  const loadKeyPairsFromStorage = (password, callback) => {\n    chrome.storage.sync.get(['encryptedKeyPairs'], (result) => {\n      if (result.encryptedKeyPairs) {\n        try {\n          const bytes = CryptoJS.AES.decrypt(result.encryptedKeyPairs, password);\n          const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\n          const decryptedKeyPairs = JSON.parse(decryptedData);\n          callback(decryptedKeyPairs);\n        } catch (err) {\n          console.error('Error decrypting key pairs:', err);\n          setAlert({ isOpen: true, message: 'Failed to decrypt key pairs. Please check your password.' });\n          callback([]);\n        }\n      } else {\n        callback([]);\n      }\n    });\n  };\n\n  // Function to append new key pairs while preventing duplicates and validating them\n  const appendKeyPairs = (newKeyPairs) => {\n    const password = storedPassword;\n    if (!password) {\n        console.error('Password is not available');\n        setAlert({ isOpen: true, message: 'Password is not available. Please log in again.' });\n        return;\n    }\n\n    // Validate each key pair\n    for (let i = 0; i < newKeyPairs.length; i++) {\n        const keyPair = newKeyPairs[i];\n        if (!keyPair.publicKey || !keyPair.privateKey) {\n            setAlert({ isOpen: true, message: `Key pair at index ${i} is missing publicKey or privateKey.` });\n            console.error(`Key pair at index ${i} is missing publicKey or privateKey.`);\n            return;\n        }\n\n        try {\n            // Decode private key from Base58\n            const decodedPrivateKey = Base58.decode(keyPair.privateKey);\n            if (decodedPrivateKey.length !== 32) {\n                setAlert({ isOpen: true, message: `Private key at index ${i} is not 32 bytes.` });\n                console.error(`Private key at index ${i} is not 32 bytes.`);\n                return;\n            }\n\n            // Derive public key from private key using nacl.sign.keyPair.fromSeed\n            const derivedKeyPair = nacl.sign.keyPair.fromSeed(decodedPrivateKey);\n            const derivedPublicKey = Base58.encode(derivedKeyPair.publicKey);\n\n            // Compare derived public key with provided public key\n            if (derivedPublicKey !== keyPair.publicKey) {\n                setAlert({ isOpen: true, message: `Public key does not match private key at index ${i}.` });\n                console.error(`Public key does not match private key at index ${i}.`);\n                return;\n            }\n        } catch (err) {\n            console.error('Error validating key pair:', err);\n            setAlert({ isOpen: true, message: `Error validating key pair at index ${i}.` });\n            return;\n        }\n    }\n\n    // Load existing key pairs\n    loadKeyPairsFromStorage(password, (existingKeyPairs) => {\n        // Filter out duplicates\n        const uniqueNewKeyPairs = newKeyPairs.filter(newKey => {\n            return !existingKeyPairs.some(existingKey =>\n                existingKey.publicKey === newKey.publicKey &&\n                existingKey.privateKey === newKey.privateKey\n            );\n        });\n\n        if (uniqueNewKeyPairs.length === 0) {\n            console.log('No new unique key pairs to add.');\n            setAlert({ isOpen: true, message: 'No new unique key pairs to add.' });\n            return;\n        }\n\n        const updatedKeyPairs = [...existingKeyPairs, ...uniqueNewKeyPairs];\n        saveKeyPairsToStorage(updatedKeyPairs, password);\n        setKeyPairs(updatedKeyPairs);\n\n        // Update selected key pair to the last one added\n        const newIndex = updatedKeyPairs.length - 1;\n        setSelectedKeyPairIndex(newIndex);\n        setPublicKey(updatedKeyPairs[newIndex].publicKey);\n        setPrivateKey(updatedKeyPairs[newIndex].privateKey);\n        saveSelectedKeyPairIndex(newIndex);\n\n        // Generate and set the ownerAddress\n        const ownerAddress = generateOwnerAddress(updatedKeyPairs[newIndex].publicKey);\n        setOwnerAddress(ownerAddress);\n\n        // Update 'store' with the new key pair\n        const encryptedPrivateKey = CryptoJS.AES.encrypt(updatedKeyPairs[newIndex].privateKey, password).toString();\n        const hash = CryptoJS.SHA256(password).toString(CryptoJS.enc.Hex);\n        const store = {\n            hash,\n            publicKey: updatedKeyPairs[newIndex].publicKey,\n            encryptedPrivateKey: encryptedPrivateKey,\n            history: [],\n        };\n        chrome.storage.sync.set({ store }, () => {\n            console.log('Store updated with new key pair');\n        });\n    });\n  };\n\n  // Function to save selected key pair index\n  const saveSelectedKeyPairIndex = (index) => {\n    chrome.storage.local.set({ selectedKeyPairIndex: index }, () => {});\n  };\n\n  // Function to load selected key pair index\n  const loadSelectedKeyPairIndex = (callback) => {\n    chrome.storage.local.get(['selectedKeyPairIndex'], (result) => {\n      const index = result.selectedKeyPairIndex !== undefined ? result.selectedKeyPairIndex : 0;\n      callback(index);\n    });\n  };\n\n  // Function to generate new key pair and store it\n  const generateKeyPair = (callback) => {\n    const password = storedPassword;\n    if (!password) {\n      console.error('Password is not available');\n      setAlert({ isOpen: true, message: 'Password is not available. Please log in again.' });\n      return;\n    }\n\n    const keyPair = nacl.sign.keyPair();\n    const newPublicKey = Base58.encode(keyPair.publicKey);\n    const newPrivateKey = Base58.encode(keyPair.secretKey.slice(0, 32)); // Using the first 32 bytes as seed\n    const ownerAddress = generateOwnerAddress(newPublicKey);\n    const newKeyPair = { publicKey: newPublicKey, privateKey: newPrivateKey };\n\n    // Load existing key pairs\n    loadKeyPairsFromStorage(password, (existingKeyPairs) => {\n      // Check for duplicates before adding\n      const isDuplicate = existingKeyPairs.some(existingKey =>\n          existingKey.publicKey === newKeyPair.publicKey &&\n          existingKey.privateKey === newKeyPair.privateKey\n      );\n\n      if (isDuplicate) {\n          console.log('Generated key pair is a duplicate. Skipping.');\n          setAlert({ isOpen: true, message: 'Generated key pair is a duplicate. Skipping.' });\n          return;\n      }\n\n      const updatedKeyPairs = [...existingKeyPairs, newKeyPair];\n      // Save updated key pairs\n      saveKeyPairsToStorage(updatedKeyPairs, password);\n      setKeyPairs(updatedKeyPairs);\n      setPublicKey(newPublicKey);\n      setPrivateKey(newPrivateKey);\n      setOwnerAddress(ownerAddress);\n      const newIndex = updatedKeyPairs.length - 1;\n      setSelectedKeyPairIndex(newIndex);\n      saveSelectedKeyPairIndex(newIndex);\n      setIsAuthenticated(true);\n\n      // Encrypt the private key and save in 'store'\n      const encryptedPrivateKey = CryptoJS.AES.encrypt(newPrivateKey, password).toString();\n      const hash = CryptoJS.SHA256(password).toString(CryptoJS.enc.Hex);\n      const store = {\n        hash,\n        publicKey: newPublicKey,\n        encryptedPrivateKey: encryptedPrivateKey,\n        history: [],\n      };\n      chrome.storage.sync.set({ store }, () => {\n        console.log('Store updated with new key pair');\n        if (callback) {\n          callback();\n        }\n      });\n    });\n  };\n\n  // Function to delete a key pair\n  const deleteKeyPair = (index, callback) => {\n    const password = storedPassword;\n    if (!password) {\n        console.error('Password is not available');\n        setAlert({ isOpen: true, message: 'Password is not available. Please log in again.' });\n        return;\n    }\n\n    loadKeyPairsFromStorage(password, (existingKeyPairs) => {\n        if (existingKeyPairs.length <= 1) {\n            console.error('Cannot delete the last remaining key pair.');\n            setAlert({ isOpen: true, message: 'Cannot delete the last remaining key pair.' });\n            return;\n        }\n\n        // Remove the key pair at the specified index\n        const updatedKeyPairs = [...existingKeyPairs];\n        updatedKeyPairs.splice(index, 1);\n\n        // Save the updated keyPairs back to storage\n        saveKeyPairsToStorage(updatedKeyPairs, password);\n        setKeyPairs(updatedKeyPairs);\n\n        // Reset to the first key pair after deletion\n        setSelectedKeyPairIndex(0);\n        if (updatedKeyPairs.length > 0) {\n            setPublicKey(updatedKeyPairs[0].publicKey);\n            setPrivateKey(updatedKeyPairs[0].privateKey);\n            saveSelectedKeyPairIndex(0);\n\n            // Generate and set the ownerAddress\n            const ownerAddress = generateOwnerAddress(updatedKeyPairs[0].publicKey);\n            setOwnerAddress(ownerAddress);\n        }\n\n        // Update 'store' with the new selected key pair\n        if (updatedKeyPairs.length > 0) {\n            const encryptedPrivateKey = CryptoJS.AES.encrypt(updatedKeyPairs[0].privateKey, password).toString();\n            const hash = CryptoJS.SHA256(password).toString(CryptoJS.enc.Hex);\n            const store = {\n                hash,\n                publicKey: updatedKeyPairs[0].publicKey,\n                encryptedPrivateKey: encryptedPrivateKey,\n                history: [],\n            };\n            chrome.storage.sync.set({ store }, () => {\n                console.log('Store updated with selected key pair after deletion');\n            });\n        }\n\n        // Optionally call the callback\n        if (callback) {\n            callback();\n        }\n    });\n  };\n\n  // Load key pairs from storage when context is initialized\n  useEffect(() => {\n    chrome.storage.local.get(['password'], (result) => {\n      const password = result.password;\n      if (password) {\n        setStoredPassword(password);\n        loadKeyPairsFromStorage(password, (loadedKeyPairs) => {\n          if (loadedKeyPairs.length > 0) {\n            setKeyPairs(loadedKeyPairs);\n            loadSelectedKeyPairIndex((index) => {\n              if (loadedKeyPairs[index]) {\n                setPublicKey(loadedKeyPairs[index].publicKey);\n                setPrivateKey(loadedKeyPairs[index].privateKey);\n                setSelectedKeyPairIndex(index);\n\n                // Generate and set the ownerAddress\n                const ownerAddress = generateOwnerAddress(loadedKeyPairs[index].publicKey);\n                setOwnerAddress(ownerAddress);\n\n              } else if (loadedKeyPairs.length > 0) {\n                setPublicKey(loadedKeyPairs[0].publicKey);\n                setPrivateKey(loadedKeyPairs[0].privateKey);\n                setSelectedKeyPairIndex(0);\n\n                // Generate and set the ownerAddress\n                const ownerAddress = generateOwnerAddress(loadedKeyPairs[0].publicKey);\n                setOwnerAddress(ownerAddress);\n              }\n              setIsAuthenticated(true);\n            });\n          } else {\n            setIsAuthenticated(false);\n          }\n        });\n      } else {\n        setIsAuthenticated(false);\n      }\n    });\n  }, []);\n\n  // Function to set selected key pair\n  const setSelectedKeyPairFn = (index) => {\n    if (keyPairs[index]) {\n      setPublicKey(keyPairs[index].publicKey);\n      setPrivateKey(keyPairs[index].privateKey);\n      setSelectedKeyPairIndex(index);\n      saveSelectedKeyPairIndex(index);\n\n      // Generate and set the ownerAddress\n      const ownerAddress = generateOwnerAddress(keyPairs[index].publicKey);\n      setOwnerAddress(ownerAddress);\n\n      const password = storedPassword;\n      if (!password) {\n        console.error('Password is not available');\n        setAlert({ isOpen: true, message: 'Password is not available. Please log in again.' });\n        return;\n      }\n      const encryptedPrivateKey = CryptoJS.AES.encrypt(keyPairs[index].privateKey, password).toString();\n      const hash = CryptoJS.SHA256(password).toString(CryptoJS.enc.Hex);\n      const store = {\n        hash,\n        publicKey: keyPairs[index].publicKey,\n        encryptedPrivateKey: encryptedPrivateKey,\n        history: [],\n      };\n      chrome.storage.sync.set({ store }, () => {\n        console.log('Store updated with selected key pair');\n      });\n    }\n  };\n\n  useEffect(() => {\n    // Retrieve the mode from storage when the app starts\n    chrome.storage.local.get(['serviceMode'], (result) => {\n      if (result.serviceMode) {\n        setServiceMode(result.serviceMode);\n        navigate(result.serviceMode === 'KV' ? '/dashboard' : '/contract');\n      }\n    });\n  }, []);\n\n  const toggleServiceMode = () => {\n    const newMode = serviceMode === 'KV' ? 'Contract' : 'KV';\n    setServiceMode(newMode);\n    chrome.storage.local.set({ serviceMode: newMode }, () => {\n      // Clear connections when mode changes\n      chrome.storage.local.remove(['connections'], () => {\n        navigate(newMode === 'KV' ? '/dashboard' : '/contract');\n      });\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        values, setValues,\n        confirmValues, setConfirmValues,\n        loginValues, setLoginValues,\n        publicKey, setPublicKey,\n        privateKey, setPrivateKey,\n        keyPairs, setKeyPairs,\n        generateKeyPair,\n        selectedKeyPairIndex, setSelectedKeyPairIndex,\n        setSelectedKeyPair: setSelectedKeyPairFn,\n        isAuthenticated, setIsAuthenticated,\n        storedPassword, setStoredPassword,\n        deleteKeyPair,\n        appendKeyPairs,\n        alert, setAlert,\n        serviceMode, setServiceMode, toggleServiceMode,\n        ownerAddress, setOwnerAddress,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/resvault.6e7d22cc.png\";","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.    \n */\n\n\n/*global chrome*/\nimport '../css/App.css';\nimport CryptoJS from \"crypto-js\";\nimport React, { useEffect, useContext } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport splash from \"../images/resvault.png\";\nimport Lottie from 'react-lottie';\nimport versionData from '../data/version.json';\nimport { GlobalContext } from '../context/GlobalContext';\n\nfunction Home() {\n  const { setPublicKey, setPrivateKey } = useContext(GlobalContext);\n  const navigate = useNavigate();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: require('../images/bg.json'),\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n      renderer: 'svg'  \n    }\n  };\n\n  useEffect(() => {\n    // Retrieve stored public and private keys\n    chrome.storage.sync.get([\"store\"], (res) => {\n      if (res.store && res.store.publicKey) {\n        chrome.storage.local.get([\"password\"], (result) => {\n          if (!result.password) {\n            // If no password, navigate to login\n            navigate(\"/login\", { state: res.store });\n          } else {\n            // Decrypt private key and store both public and private keys\n            const bytes = CryptoJS.AES.decrypt(res.store.encryptedPrivateKey, result.password);\n            const privateKey = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n            setPublicKey(res.store.publicKey);\n            setPrivateKey(privateKey);\n\n            // Navigate to the dashboard\n            navigate(\"/dashboard\");\n          }\n        });\n      }\n    });\n  }, [navigate, setPublicKey, setPrivateKey]);\n\n  const handleSignup = () => {\n    navigate(\"/signup\");\n  };\n\n  return (\n    <>\n      <div className=\"lottie-background\">\n        <Lottie options={defaultOptions} height=\"100%\" width=\"100%\" />\n      </div>\n      <div className=\"page page--splash\" data-page=\"splash\">\n        <div className=\"splash\">\n          <div className=\"splash__content\">\n            <div className=\"splash__logo\">Res<strong>Vault</strong></div>\n            <div className=\"splash__image\"><img src={splash} alt=\"\" title=\"\"/></div>\n            <div className=\"splash__text\"></div>\n            <div className=\"splash__buttons\">\n              <button className=\"button button--full button--main\" onClick={handleSignup}>Signup</button>\n            </div>\n          </div>\n        </div>\n        <p className=\"bottom-navigation\" style={{backgroundColor: 'transparent', display: 'flex', justifyContent: 'center', textShadow: '1px 1px 1px rgba(0, 0, 0, 0.3)', color: 'rgb(255, 255, 255, 0.5)', fontSize: '9px'}}>ResVault v{versionData.version}</p>\n      </div>\n    </>\n  );\n}\n\nexport default Home;","export default __webpack_public_path__ + \"static/media/arrow-back.32c7f60c.svg\";","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*\n*/\n\n\n/*global chrome*/\nimport '../css/App.css';\nimport CryptoJS from \"crypto-js\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport Input from \"@mui/material/Input\";\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport backicon from \"../images/icons/arrow-back.svg\";\nimport React, { useContext, useState, useEffect } from 'react'; // Note the import of useEffect\nimport Lottie from 'react-lottie';\nimport versionData from '../data/version.json';\nimport { useNavigate } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalContext';\n\nfunction SignUp() {\n    const {\n        values,\n        setValues,\n        confirmValues,\n        setConfirmValues,\n        generateKeyPair,\n        setIsAuthenticated,\n        setStoredPassword,\n        storedPassword,\n    } = useContext(GlobalContext);\n    const navigate = useNavigate();\n    const [showPasswordMismatchModal, setShowPasswordMismatchModal] = useState(false);\n    const [shouldGenerateKeyPair, setShouldGenerateKeyPair] = useState(false);\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: require('../images/signup.json'),\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice',\n            renderer: 'svg'\n        }\n    };\n\n    const back = () => {\n        navigate(\"/\");\n    };\n\n    const buttonStyle = {\n        backgroundColor: 'transparent',\n        cursor: 'pointer',\n        border: 'none',\n        boxShadow: 'none',\n        outline: 'none',\n    };\n\n    const createAccount = async (e) => {\n        e.preventDefault();\n        if (values.password === confirmValues.password) {\n            const password = values.password;\n            // Store password\n            chrome.storage.local.set({ password }, () => {\n                setStoredPassword(password);\n                setShouldGenerateKeyPair(true);\n            });\n        } else {\n            setShowPasswordMismatchModal(true);\n        }\n    };\n\n    useEffect(() => {\n        if (shouldGenerateKeyPair && storedPassword) {\n            generateKeyPair(() => {\n                setIsAuthenticated(true);\n                navigate(\"/dashboard\");\n            });\n            setShouldGenerateKeyPair(false);\n        }\n    }, [shouldGenerateKeyPair, storedPassword, generateKeyPair, setIsAuthenticated, navigate]);\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handlePasswordChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowConfirmPassword = () => {\n        setConfirmValues({ ...confirmValues, showPassword: !confirmValues.showPassword });\n    };\n\n    const handleMouseDownConfirmPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleConfirmPasswordChange = (prop) => (event) => {\n        setConfirmValues({ ...confirmValues, [prop]: event.target.value });\n    };\n\n    const closeModal = () => {\n        setShowPasswordMismatchModal(false);\n    };\n\n    return (\n        <>\n            <div className=\"lottie-background\">\n                <Lottie options={defaultOptions} height=\"100%\" width=\"100%\" />\n            </div>\n            <div className=\"page page--login\" data-page=\"login\">\n                <header className=\"header header--fixed\">\n                    <div className=\"header__inner\">\n                        <div className=\"header__icon\">\n                            <button onClick={back} style={buttonStyle}>\n                                <img src={backicon} alt=\"back\" />\n                            </button>\n                        </div>\n                    </div>\n                </header>\n\n                <div className=\"login\">\n                    <div className=\"login__content\">\n                        <h2 className=\"login__title\">Create an account</h2>\n                        <div className=\"login-form\">\n                            <form id=\"LoginForm\" method=\"post\" onSubmit={createAccount}>\n                                <div className=\"login-form__row\">\n                                    <label className=\"login-form__label\">Password</label>\n                                    <Input\n                                        type={values.showPassword ? \"text\" : \"password\"}\n                                        onChange={handlePasswordChange(\"password\")}\n                                        placeholder=\"Password\"\n                                        className=\"login-form__input\"\n                                        value={values.password}\n                                        style={{ color: 'white', width: '100%' }}\n                                        disableUnderline\n                                        required\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={handleClickShowPassword}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                    style={{ color: 'white' }}\n                                                >\n                                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </div>\n                                <div className=\"login-form__row\">\n                                    <label className=\"login-form__label\">Confirm Password</label>\n                                    <Input\n                                        type={confirmValues.showPassword ? \"text\" : \"password\"}\n                                        onChange={handleConfirmPasswordChange(\"password\")}\n                                        placeholder=\"Confirm Password\"\n                                        className=\"login-form__input\"\n                                        value={confirmValues.password}\n                                        style={{ color: 'white', width: '100%' }}\n                                        disableUnderline\n                                        required\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={handleClickShowConfirmPassword}\n                                                    onMouseDown={handleMouseDownConfirmPassword}\n                                                    style={{ color: 'white' }}\n                                                >\n                                                    {confirmValues.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </div>\n                                <PasswordStrengthBar password={values.password} />\n                                <div className=\"login-form__row\">\n                                    <button\n                                        disabled={!values.password || !confirmValues.password}\n                                        className=\"login-form__submit button button--main button--full\"\n                                        id=\"submit\"\n                                        type=\"submit\"\n                                    >\n                                        Create Account\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                        <p\n                            className=\"bottom-navigation\"\n                            style={{\n                                backgroundColor: 'transparent',\n                                display: 'flex',\n                                justifyContent: 'center',\n                                textShadow: '1px 1px 1px rgba(0, 0, 0, 0.3)',\n                                color: 'rgb(255, 255, 255, 0.5)',\n                                fontSize: '9px',\n                            }}\n                        >\n                            ResVault v{versionData.version}\n                        </p>\n                    </div>\n                </div>\n\n                {showPasswordMismatchModal && (\n                    <div className=\"modal-overlay\">\n                        <div className=\"modal\">\n                            <h2>Passwords do not match!</h2>\n                            <p>Please make sure both passwords are the same.</p>\n                            <button className=\"button button--main button--full\" onClick={closeModal}>\n                                OK\n                            </button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default SignUp;\n","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*\n*/\n\n\n/*global chrome*/\nimport '../css/App.css';\nimport CryptoJS from \"crypto-js\";  // Changed to default import\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport Input from \"@mui/material/Input\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Lottie from 'react-lottie';\nimport { useNavigate } from \"react-router-dom\";\nimport versionData from '../data/version.json';\nimport { GlobalContext } from '../context/GlobalContext';\n\nfunction Login() {\n  const {\n    loginValues,\n    setLoginValues,\n    setPublicKey,\n    setPrivateKey,\n    setIsAuthenticated,\n    setKeyPairs,\n    setSelectedKeyPairIndex,\n    setStoredPassword\n  } = useContext(GlobalContext);\n  const navigate = useNavigate();\n  const [showPasswordErrorModal, setShowPasswordErrorModal] = useState(false);\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: require('../images/signup.json'),\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n      renderer: 'svg'\n    }\n  };\n\n  const removeAccount = async () => {\n    chrome.storage.sync.clear(function() {});\n    chrome.storage.local.clear(function() {});\n    localStorage.removeItem('nets');\n    setIsAuthenticated(false);\n    navigate(\"/\");\n  };\n\n  const loginAccount = async (e) => {\n    e.preventDefault();\n    chrome.storage.sync.get(['store', 'encryptedKeyPairs'], (res) => {\n      if (res.store && CryptoJS.SHA256(loginValues.password).toString(CryptoJS.enc.Hex) === res.store.hash) {\n        try {\n          // Decrypt private key from store\n          const privateKeyBytes = CryptoJS.AES.decrypt(res.store.encryptedPrivateKey, loginValues.password);\n          const decryptedPrivateKey = privateKeyBytes.toString(CryptoJS.enc.Utf8);\n          const publicKey = res.store.publicKey;\n\n          // Check if encryptedKeyPairs exist\n          if (!res.encryptedKeyPairs) {\n            console.error('No encryptedKeyPairs found in storage.');\n            setShowPasswordErrorModal(true);\n            return;\n          }\n\n          // Load key pairs\n          const encryptedKeyPairs = res.encryptedKeyPairs;\n          const decryptedKeyPairsBytes = CryptoJS.AES.decrypt(encryptedKeyPairs, loginValues.password);\n          const decryptedKeyPairsString = decryptedKeyPairsBytes.toString(CryptoJS.enc.Utf8);\n\n          let decryptedKeyPairs;\n          try {\n            decryptedKeyPairs = JSON.parse(decryptedKeyPairsString);\n          } catch (parseError) {\n            console.error('Error parsing decrypted key pairs:', parseError, 'decryptedKeyPairsString:', decryptedKeyPairsString);\n            setShowPasswordErrorModal(true);\n            return;\n          }\n\n          // Ensure decryptedKeyPairs is an array\n          if (!Array.isArray(decryptedKeyPairs)) {\n            console.error('Decrypted key pairs is not an array:', decryptedKeyPairs);\n            setShowPasswordErrorModal(true);\n            return;\n          }\n\n          // Update keyPairs and set keys\n          setKeyPairs(decryptedKeyPairs);\n          // Find the index of the key pair matching the publicKey\n          const keyPairIndex = decryptedKeyPairs.findIndex(kp => kp.publicKey === publicKey);\n          if (keyPairIndex !== -1) {\n            setSelectedKeyPairIndex(keyPairIndex);\n            setPublicKey(decryptedKeyPairs[keyPairIndex].publicKey);\n            setPrivateKey(decryptedKeyPairs[keyPairIndex].privateKey);\n          } else {\n            // If not found, default to first key pair\n            setSelectedKeyPairIndex(0);\n            setPublicKey(decryptedKeyPairs[0].publicKey);\n            setPrivateKey(decryptedKeyPairs[0].privateKey);\n          }\n\n          // Store password in chrome.storage.local and set storedPassword in context\n          chrome.storage.local.set({ password: loginValues.password }, () => {\n            setStoredPassword(loginValues.password);\n            setIsAuthenticated(true);\n            navigate(\"/dashboard\");\n          });\n        } catch (err) {\n          console.error('Error during login:', err);\n          setShowPasswordErrorModal(true);\n        }\n      } else {\n        setShowPasswordErrorModal(true);\n      }\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setLoginValues({ ...loginValues, showPassword: !loginValues.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handlePasswordChange = (prop) => (event) => {\n    setLoginValues({ ...loginValues, [prop]: event.target.value });\n  };\n\n  const closeModal = () => {\n    setShowPasswordErrorModal(false);\n  };\n\n  // Reset loginValues when the component mounts\n  useEffect(() => {\n    setLoginValues({ password: '', showPassword: false });\n  }, [setLoginValues]);\n\n  return (\n    <>\n      <div className=\"lottie-background\">\n        <Lottie options={defaultOptions} height=\"100%\" width=\"100%\" />\n      </div>\n      <div className=\"page page--login\" data-page=\"login\">\n        <div className=\"login\">\n          <div className=\"login__content\">\n            <h2 className=\"login__title\">Login</h2>\n            <div className=\"login-form\">\n              <form id=\"LoginForm\" onSubmit={loginAccount}>\n                <div className=\"login-form__row\">\n                  <label className=\"login-form__label\">Password</label>\n                  <Input\n                    type={loginValues.showPassword ? \"text\" : \"password\"}\n                    onChange={handlePasswordChange(\"password\")}\n                    placeholder=\"Password\"\n                    className=\"login-form__input\"\n                    value={loginValues.password}\n                    style={{ color: 'white', width: '100%' }}\n                    disableUnderline\n                    required\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={handleClickShowPassword}\n                          onMouseDown={handleMouseDownPassword}\n                          style={{ color: 'white' }}\n                        >\n                          {loginValues.showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </div>\n                <div className=\"login-form__row\">\n                  <button\n                    disabled={!loginValues.password}\n                    className=\"login-form__submit button button--main button--full\"\n                    type=\"submit\"\n                  >\n                    Login\n                  </button>\n                </div>\n              </form>\n              <div className=\"login-form__bottom\">\n                <p>\n                  Delete current account? <br />\n                  <button\n                    style={{\n                      color: '#47e7ce',\n                      fontWeight: '600',\n                      fontSize: '1.2rem',\n                      background: 'transparent',\n                      border: 'none',\n                      outline: 'none',\n                      cursor: 'pointer',\n                    }}\n                    onClick={removeAccount}\n                  >\n                    Remove Account\n                  </button>\n                </p>\n              </div>\n              <p\n                className=\"bottom-navigation\"\n                style={{\n                  backgroundColor: 'transparent',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  textShadow: '1px 1px 1px rgba(0, 0, 0, 0.3)',\n                  color: 'rgb(255, 255, 255, 0.5)',\n                  fontSize: '9px',\n                }}\n              >\n                ResVault v{versionData.version}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {showPasswordErrorModal && (\n          <div className=\"modal-overlay\">\n            <div className=\"modal\">\n              <h2>Password Incorrect!</h2>\n              <p>Please check your password and try again.</p>\n              <button className=\"button button--main button--full\" onClick={closeModal}>\n                OK\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS\n * OF ANY KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.    \n */\n\n/*global chrome*/\nimport '../css/App.css';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport Lottie from 'react-lottie';\nimport versionData from '../data/version.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faUnlock } from '@fortawesome/free-solid-svg-icons';\nimport graphql from \"../images/logos/graphql.png\";\nimport { GlobalContext } from '../context/GlobalContext';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Dashboard() {\n    const {\n        publicKey,\n        privateKey,\n        keyPairs,\n        generateKeyPair,\n        setPublicKey,\n        setPrivateKey,\n        selectedKeyPairIndex,\n        setSelectedKeyPairIndex,\n        setSelectedKeyPair,\n        setIsAuthenticated,\n        deleteKeyPair,\n        appendKeyPairs, \n        alert, // For alert modal\n        setAlert, // For alert modal\n        serviceMode,\n        toggleServiceMode,\n    } = useContext(GlobalContext);\n\n    const [tabId, setTabId] = useState(null);\n    const [domain, setDomain] = useState('');\n    const [selectedNet, setSelectedNet] = useState('');\n    const [completeUrl, setCompleteUrl] = useState('');\n    const [customUrl, setCustomUrl] = useState('');\n    const [isCopied, setIsCopied] = useState(false);\n    const [isConnected, setIsConnected] = useState(false);\n    const [faviconUrl, setFaviconUrl] = useState('');\n    const [nets, setNets] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [newNetName, setNewNetName] = useState('');\n    const [protocol, setProtocol] = useState('http');\n    const [error, setError] = useState('');\n    const [jsonFileName, setJsonFileName] = useState('');\n    const fileInputRef = useRef(null);\n    const keyPairFileInputRef = useRef(null);\n    const navigate = useNavigate();\n\n    // State variables for transaction data and handling\n    const [transactionData, setTransactionData] = useState(null);\n    const [transactionError, setTransactionError] = useState('');\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\n    const [successResponse, setSuccessResponse] = useState(null);\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n    // State for copying transaction ID\n    const [isIdCopied, setIsIdCopied] = useState(false);\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: require('../images/bg.json'),\n        rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice',\n        renderer: 'svg'\n        }\n    };\n\n    const modalOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: require('../images/modal.json'),\n        rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice',\n        renderer: 'svg'\n        }\n    };\n\n    // Function to get full hostname from URL\n    function getBaseDomain(url) {\n        try {\n        const urlObj = new URL(url);\n        return urlObj.hostname;\n        } catch (error) {\n        console.error('Invalid URL:', url);\n        return '';\n        }\n    }\n\n    // Function to set connection status per domain and net\n    const setDomainConnectionStatus = (domain, net, isConnected) => {\n        chrome.storage.local.get(['connections'], (result) => {\n        let connections = result.connections || {};\n        if (!connections[domain]) {\n            connections[domain] = {};\n        }\n        connections[domain][net] = isConnected;\n        chrome.storage.local.set({ connections });\n        });\n    };\n\n    // Function to get connection status per domain and net\n    const getDomainConnectionStatus = (domain, net, callback) => {\n        chrome.storage.local.get(['connections'], (result) => {\n        const connections = result.connections || {};\n        const domainConnections = connections[domain] || {};\n        const isConnected = domainConnections[net] || false;\n        callback(isConnected);\n        });\n    };\n\n    useEffect(() => {\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        if (tabs.length > 0 && tabs[0].url) {\n            const currentTab = tabs[0];\n            setTabId(currentTab.id);\n\n            const currentDomain = getBaseDomain(currentTab.url);\n            setDomain(currentDomain);\n\n            // Ensure selectedNet is set before checking connection status\n            if (selectedNet) {\n            getDomainConnectionStatus(currentDomain, selectedNet, (connected) => {\n                setIsConnected(connected);\n            });\n            }\n        } else {\n            // If no active tab or no URL, set domain to 'extension'\n            setDomain('extension');\n\n            // Ensure selectedNet is set before checking connection status\n            if (selectedNet) {\n            getDomainConnectionStatus('extension', selectedNet, (connected) => {\n                setIsConnected(connected);\n            });\n            }\n        }\n        });\n    }, [selectedNet]);\n\n    useEffect(() => {\n        if (domain && selectedNet) {\n        chrome.runtime.sendMessage({ action: \"requestData\", domain: domain, net: selectedNet }, function(response) {\n            if (response && response.faviconUrl) {\n            setFaviconUrl(response.faviconUrl);\n            } else {\n            setFaviconUrl('');\n            }\n            // Handle other response data if needed\n        });\n        }\n    }, [domain, selectedNet]);\n\n    useEffect(() => {\n        const storedNets = JSON.parse(localStorage.getItem('nets')) || [];\n        setNets(storedNets);\n    }, []);\n\n    // Update useEffect to set default URLs based on serviceMode\n    useEffect(() => {\n        // Fetch active net URL from storage\n        chrome.storage.local.get(['activeNetUrl'], (result) => {\n        if (result.activeNetUrl) {\n            setCompleteUrl(result.activeNetUrl); // Use the full URL with protocol\n\n            // Check if it's one of the known networks\n            if (result.activeNetUrl === 'https://cloud.resilientdb.com/graphql' || result.activeNetUrl === 'https://contract.resilientdb.com/graphql') {\n            setSelectedNet('ResilientDB Mainnet');\n            } else if (result.activeNetUrl === 'http://localhost:8000/graphql' || result.activeNetUrl === 'http://localhost:8400/graphql') {\n            setSelectedNet('ResilientDB Localnet');\n            } else {\n            // Custom URL case\n            const customNet = nets.find(net => net.url === result.activeNetUrl);\n            if (customNet) {\n                setSelectedNet(customNet.name); // Set the name of the custom network\n            } else {\n                setSelectedNet('Custom URL');\n            }\n            // Set customUrl by stripping the protocol and /graphql part\n            setCustomUrl(result.activeNetUrl.replace(/^https?:\\/\\/|\\/graphql$/g, ''));\n            }\n        } else {\n            // No active net URL, default to ResilientDB Mainnet\n            const defaultUrl = serviceMode === 'KV' ? 'https://cloud.resilientdb.com/graphql' : 'https://contract.resilientdb.com/graphql';\n            setCompleteUrl(defaultUrl);\n            setSelectedNet('ResilientDB Mainnet'); // Ensure default network is selected\n        }\n        });\n    }, [nets, serviceMode]);\n\n    useEffect(() => {\n        if (domain && selectedNet) {\n        getDomainConnectionStatus(domain, selectedNet, (connected) => {\n            setIsConnected(connected);\n        });\n        }\n    }, [domain, selectedNet]);\n\n    const toggleProtocol = () => {\n        const newProtocol = protocol === 'http' ? 'https' : 'http';\n        setProtocol(newProtocol);\n        if (selectedNet === 'Custom URL' && customUrl) {\n        setCompleteUrl(`${newProtocol}://${customUrl}/graphql`);\n        }\n    };\n\n    const addNet = () => {\n        if (!newNetName.trim() || !customUrl.trim()) {\n        setError('Both fields are required.');\n        setAlert({ isOpen: true, message: 'Both Net Name and GraphQL URL are required.' });\n        return;\n        }\n        setError('');\n        const fullUrl = `${protocol}://${customUrl}/graphql`;\n        const newNets = [...nets, { name: newNetName, url: fullUrl }];\n        setNewNetName('');\n        setCustomUrl('');\n        setNets(newNets);\n        localStorage.setItem('nets', JSON.stringify(newNets));\n        setSelectedNet(newNetName);\n    };\n\n    const removeNet = (name) => {\n        const filteredNets = nets.filter(net => net.name !== name);\n        setNets(filteredNets);\n        localStorage.setItem('nets', JSON.stringify(filteredNets));\n    };\n\n    const toggleConnection = () => {\n        if (!publicKey || !privateKey) {\n        setAlert({ isOpen: true, message: 'Public or Private key is missing.' });\n        console.error('Public or Private key is missing');\n        return;\n        }\n\n        const newConnectionStatus = !isConnected;\n        setIsConnected(newConnectionStatus);\n\n        if (newConnectionStatus) {\n        console.log('Connecting to net:', selectedNet, 'on domain:', domain);\n        chrome.runtime.sendMessage(\n            {\n            action: 'storeKeys',\n            publicKey,\n            privateKey,\n            url: completeUrl,\n            domain: domain,\n            net: selectedNet,\n            },\n            () => {\n            setDomainConnectionStatus(domain, selectedNet, newConnectionStatus);\n            }\n        );\n        } else {\n        console.log('Disconnecting from net:', selectedNet, 'on domain:', domain);\n        chrome.runtime.sendMessage(\n            {\n            action: 'disconnectKeys',\n            domain: domain,\n            net: selectedNet,\n            },\n            () => {\n            setDomainConnectionStatus(domain, selectedNet, false);\n            }\n        );\n        }\n    };\n\n    // Update the switchNetwork function to use URLs based on serviceMode\n    const switchNetwork = (value) => {\n        if (value === 'Manage Nets') {\n        setShowModal(true);\n        } else {\n        let newCompleteUrl = '';\n        switch (value) {\n            case 'ResilientDB Mainnet':\n            newCompleteUrl = serviceMode === 'KV' ? 'https://cloud.resilientdb.com/graphql' : 'https://contract.resilientdb.com/graphql';\n            break;\n            case 'ResilientDB Localnet':\n            newCompleteUrl = serviceMode === 'KV' ? 'http://localhost:8000/graphql' : 'http://localhost:8400/graphql';\n            break;\n            case 'Custom URL':\n            if (customUrl) {\n                newCompleteUrl = `${protocol}://${customUrl}/graphql`;\n            } else {\n                newCompleteUrl = `${protocol}://`;\n            }\n            break;\n            default:\n            const selectedNetwork = nets.find(net => net.name === value);\n            if (selectedNetwork) {\n                newCompleteUrl = selectedNetwork.url;\n                setCustomUrl(selectedNetwork.url.split('://')[1].replace('/graphql', ''));\n            }\n            break;\n        }\n        setCompleteUrl(newCompleteUrl);\n        setSelectedNet(value); // Set this at the end to avoid premature updates\n\n        // Update activeNetUrl in storage using the new URL\n        chrome.storage.local.set({ activeNetUrl: newCompleteUrl }, () => {\n            console.log('Active net URL updated to', newCompleteUrl);\n        });\n        }\n    };\n\n    const handleNetworkChange = (event) => {\n        const value = event.target.value;\n        if (value === selectedNet) return; // Ignore if the value hasn't changed\n\n        if (isConnected) {\n        // Disconnect from the current network and clear domain connection status\n        chrome.runtime.sendMessage({\n            action: 'disconnectKeys',\n            domain: domain,\n            net: selectedNet\n        }, () => {\n            console.log('Disconnected from previous network');\n            setIsConnected(false);\n            setDomainConnectionStatus(domain, selectedNet, false);\n            // Proceed with switching networks\n            switchNetwork(value);\n        });\n        } else {\n        // If not connected, just switch networks\n        switchNetwork(value);\n        }\n    };\n\n    const handleCustomUrlChange = (event) => {\n        const value = event.target.value;\n        setCustomUrl(value);\n        const newUrl = `${protocol}://${value}/graphql`;\n        setCompleteUrl(newUrl);\n    };\n\n    const back = () => {\n        chrome.storage.local.remove(['password'], function() {\n          setIsAuthenticated(false);\n          navigate(\"/login\");\n        });\n    };\n\n    const handleDeleteKeyPair = () => {\n        if (keyPairs.length > 1) {\n            deleteKeyPair(selectedKeyPairIndex, () => {\n                // Reset to the first key pair after deletion\n                setSelectedKeyPairIndex(0);\n                setSelectedKeyPair(0);\n            });\n\n            // Close the delete confirmation modal\n            setShowDeleteModal(false);\n        }\n    };       \n\n    // Function to copy public key\n    const handleCopyPublicKey = () => {\n        try {\n        const tempInput = document.createElement('input');\n        tempInput.value = publicKey;\n        document.body.appendChild(tempInput);\n        tempInput.select();\n        document.execCommand('copy');\n        document.body.removeChild(tempInput);\n        setIsCopied(true);\n        setTimeout(() => {\n            setIsCopied(false);\n        }, 1500);\n        } catch (err) {\n        setAlert({ isOpen: true, message: 'Unable to copy text.' });\n        console.error('Unable to copy text: ', err);\n        }\n    };\n\n    // Function to download key pair as JSON\n    const handleDownloadKeyPair = () => {\n        const keyPair = {\n        publicKey: publicKey,\n        privateKey: privateKey,\n        };\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(keyPair));\n        const downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", \"keypair.json\");\n        document.body.appendChild(downloadAnchorNode); // required for firefox\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    };\n\n    // Function to download all key pairs as JSON\n    const handleDownloadAllKeyPairs = () => {\n        const allKeyPairs = keyPairs.map(({ publicKey, privateKey }) => ({\n        publicKey,\n        privateKey,\n        }));\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(allKeyPairs));\n        const downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", \"all-keypairs.json\");\n        document.body.appendChild(downloadAnchorNode); // required for firefox\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    };\n\n    const handleFileUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.type === 'application/json') {\n        setJsonFileName(file.name); // Show file name once uploaded\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            try {\n            const json = JSON.parse(event.target.result);\n            // Validate JSON data\n            if (json.asset && json.recipientAddress && json.amount) {\n                setTransactionData(json);\n                setTransactionError(''); // Clear any previous error\n            } else {\n                setTransactionData(null);\n                setTransactionError('Invalid JSON format: Missing required fields.');\n                setAlert({ isOpen: true, message: 'Invalid JSON format: Missing required fields.' });\n            }\n            } catch (err) {\n            console.error('Error parsing JSON:', err);\n            setTransactionData(null);\n            setTransactionError('Invalid JSON format.');\n            setAlert({ isOpen: true, message: 'Invalid JSON format.' });\n            }\n        };\n        reader.readAsText(file);\n        } else {\n        setJsonFileName(''); // Clear if the file is not JSON\n        setTransactionData(null);\n        setTransactionError('Please upload a JSON file.');\n        setAlert({ isOpen: true, message: 'Please upload a valid JSON file.' });\n        }\n    };\n\n    // Function to handle file upload for key pairs\n    const handleKeyPairFileUpload = (e) => {\n        const file = e.target.files[0];\n        if (file && file.type === 'application/json') {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                try {\n                    const uploadedKeyPairs = JSON.parse(event.target.result);\n\n                    // Ensure the uploaded data is either an array or an object\n                    if (Array.isArray(uploadedKeyPairs)) {\n                        appendKeyPairs(uploadedKeyPairs);\n                        // After appending, the context sets the selectedKeyPairIndex to the last one\n                    } else if (uploadedKeyPairs.publicKey && uploadedKeyPairs.privateKey) {\n                        appendKeyPairs([uploadedKeyPairs]); // Wrap single key pair into an array\n                        // After appending, the context sets the selectedKeyPairIndex to the last one\n                    } else {\n                        console.error('Invalid JSON format for key pairs.');\n                        setAlert({ isOpen: true, message: 'Invalid JSON format for key pairs.' });\n                    }\n                } catch (err) {\n                    console.error('Error parsing JSON:', err);\n                    setAlert({ isOpen: true, message: 'Error parsing JSON file.' });\n                }\n            };\n            reader.readAsText(file);\n        } else {\n            console.error('Please upload a valid JSON file.');\n            setAlert({ isOpen: true, message: 'Please upload a valid JSON file.' });\n        }\n    };\n\n    const handleDragEnter = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    const handleDrop = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = e.dataTransfer.files[0];\n        if (file && file.type === 'application/json') {\n        setJsonFileName(file.name);\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            try {\n            const json = JSON.parse(event.target.result);\n            // Validate JSON data\n            if (json.asset && json.recipientAddress && json.amount) {\n                setTransactionData(json);\n                setTransactionError(''); // Clear any previous error\n            } else {\n                setTransactionData(null);\n                setTransactionError('Invalid JSON format: Missing required fields.');\n                setAlert({ isOpen: true, message: 'Invalid JSON format: Missing required fields.' });\n            }\n            } catch (err) {\n            console.error('Error parsing JSON:', err);\n            setTransactionData(null);\n            setTransactionError('Invalid JSON format.');\n            setAlert({ isOpen: true, message: 'Invalid JSON format.' });\n            }\n        };\n        reader.readAsText(file);\n        } else {\n        setJsonFileName('');\n        setTransactionData(null);\n        setTransactionError('Please upload a JSON file.');\n        setAlert({ isOpen: true, message: 'Please upload a valid JSON file.' });\n        }\n    };\n\n    const handleFileClick = () => {\n        fileInputRef.current.click();\n    };\n\n    const handleKeyPairFileClick = () => {\n        keyPairFileInputRef.current.click();\n    };\n\n    const handleSubmit = () => {\n        if (!transactionData) {\n        setTransactionError('No valid transaction data found.');\n        setAlert({ isOpen: true, message: 'No valid transaction data found.' });\n        return;\n        }\n        if (!isConnected) {\n        setTransactionError('Please connect to a net before submitting a transaction.');\n        setAlert({ isOpen: true, message: 'Please connect to a net before submitting a transaction.' });\n        return;\n        }\n\n        // Send transaction data to background script\n        chrome.runtime.sendMessage({\n        action: 'submitTransactionFromDashboard',\n        transactionData: transactionData,\n        domain: domain,\n        net: selectedNet,\n        }, (response) => {\n        if (response.success) {\n            setSuccessResponse(response.data);\n            setShowSuccessModal(true);\n            setTransactionError('');\n            setJsonFileName(''); // Clear the file name after successful submission\n            setTransactionData(null);\n        } else {\n            setTransactionError(response.error || 'Transaction submission failed.');\n            setAlert({ isOpen: true, message: response.error || 'Transaction submission failed.' });\n        }\n        });\n    };\n\n    // Function to handle transaction ID click\n    const handleIdClick = () => {\n        try {\n        const transactionId = (successResponse && successResponse.postTransaction && successResponse.postTransaction.id) || '';\n        const tempInput = document.createElement('input');\n        tempInput.value = transactionId;\n        document.body.appendChild(tempInput);\n        tempInput.select();\n        document.execCommand('copy');\n        document.body.removeChild(tempInput);\n        setIsIdCopied(true);\n        setTimeout(() => {\n            setIsIdCopied(false);\n        }, 1500);\n        } catch (err) {\n        setAlert({ isOpen: true, message: 'Unable to copy transaction ID.' });\n        console.error('Unable to copy text: ', err);\n        }\n    };\n\n    // Function to handle favicon load error\n    const handleFaviconError = () => {\n        setFaviconUrl(''); // This will trigger the globe icon to display\n    };\n\n    const disconnectDueToKeysChange = () => {\n        if (isConnected) {\n            // Disconnect from the current network and clear domain connection status\n            chrome.runtime.sendMessage({\n                action: 'disconnectKeys',\n                domain: domain,\n                net: selectedNet\n            }, () => {\n                console.log('Disconnected from previous network');\n                setIsConnected(false);\n                setDomainConnectionStatus(domain, selectedNet, false);\n            });\n        }\n    }\n\n    const switchKeyPair = (index) => {\n        setSelectedKeyPair(index);\n        disconnectDueToKeysChange();\n    };\n\n    const handleGenerateKeyPair = () => {\n        generateKeyPair(() => {\n          setSelectedKeyPairIndex(keyPairs.length - 1); // Select the newly generated key pair\n          disconnectDueToKeysChange();\n        });\n    };\n\n    // Function to close the alert modal\n    const closeAlertModal = () => {\n        setAlert({ isOpen: false, message: '' });\n    };\n\n    return (\n        <>\n        <div className=\"lottie-background\">\n            <Lottie options={defaultOptions} height=\"100%\" width=\"100%\" />\n        </div>\n        <div className=\"page page--main\" data-page=\"buy\">\n            <header className=\"header header--fixed\">\n            <div className=\"header__inner header-container\">\n                <div className=\"header__logo header__logo--text\">\n                Res<strong>Vault</strong>\n                </div>\n                <div className=\"badge-container\">\n                <span className=\"badge\" onClick={toggleServiceMode}>\n                    {serviceMode === 'KV' ? 'Key-Value' : 'Smart Contract'}\n                </span>\n                </div>\n                <div className=\"header__icon open-panel\">\n                <button\n                    style={{ background: 'none', color: 'white', fontWeight: 'bolder', outline: 'none', borderStyle: 'none', cursor: 'pointer' }}\n                    onClick={back}\n                    title=\"Logout\"\n                >\n                    <ExitToAppIcon />\n                </button>\n                </div>\n            </div>\n            </header>\n\n            {showModal && (\n            <div className=\"overlay\">\n                <div className=\"modal\">\n                <div className=\"lottie-modal-background\">\n                    <Lottie options={modalOptions} height=\"100%\" width=\"100%\" />\n                </div>\n                <div className=\"modal-content\">\n                    <h2>Manage Nets</h2>\n                    {nets.length > 0 && (\n                    <div className=\"table-container\">\n                        <table>\n                        <thead>\n                            <tr>\n                            <th>Net Name</th>\n                            <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {nets.map(net => (\n                            <tr key={net.name}>\n                                <td>{net.name}</td>\n                                <td>\n                                <button className=\"icon-button\" onClick={() => removeNet(net.name)} title=\"Delete Net\">\n                                    <i className=\"fas fa-trash\"></i>\n                                </button>\n                                </td>\n                            </tr>\n                            ))}\n                        </tbody>\n                        </table>\n                    </div>\n                    )}\n                    <input className=\"modal-net-input\" type=\"text\" placeholder=\"Net Name\" value={newNetName} onChange={e => setNewNetName(e.target.value)} />\n                    <div className=\"modal-url-input-container\">\n                    <div className=\"modal-url-toggle\" onClick={toggleProtocol}>\n                        <FontAwesomeIcon icon={protocol === 'https' ? faLock : faUnlock} className={`icon ${protocol === 'https' ? 'icon-green' : 'icon-red'}`} />\n                    </div>\n                    <input type=\"text\" placeholder=\"GraphQL URL\" value={customUrl} onChange={handleCustomUrlChange} className=\"modal-url-input\" />\n                    <div className=\"modal-url-fixed\">\n                        <img src={graphql} className=\"graphql-icon\" alt=\"GraphQL\"></img>\n                    </div>\n                    </div>\n                    <div className=\"save-container\">\n                        <button onClick={addNet} className=\"button-save\" title=\"Save Net\">\n                            Save\n                        </button>\n                        <button onClick={() => setShowModal(false)} className=\"button-close\" title=\"Close Modal\">\n                            Close\n                        </button>\n                    </div>\n                    {error && <p className=\"error-message\">{error}</p>}\n                </div>\n                </div>\n            </div>\n            )}\n\n            {showSuccessModal && (\n            <div className=\"overlay\">\n                <div className=\"modal\">\n                <div className=\"modal-content\">\n                    <h2>Transaction Submitted Successfully!</h2>\n                    {/* Extract transaction ID */}\n                    {successResponse && successResponse.postTransaction && successResponse.postTransaction.id ? (\n                    <div className=\"fieldset\">\n                        <div className=\"radio-option radio-option--full\">\n                            <input\n                            type=\"radio\"\n                            name=\"transactionId\"\n                            id=\"txId\"\n                            value={successResponse.postTransaction.id}\n                            checked\n                            readOnly\n                            onClick={handleIdClick}\n                            />\n                            <label htmlFor=\"txId\">\n                            <span>{isIdCopied ? 'Copied' : `${successResponse.postTransaction.id.slice(0, 5)}...${successResponse.postTransaction.id.slice(-5)}`}</span>\n                            </label>\n                        </div>\n                    </div>\n                    ) : (\n                    <p>No transaction ID found.</p>\n                    )}\n                    <button onClick={() => setShowSuccessModal(false)} className=\"button-close\" title=\"Close Modal\">\n                    Close\n                    </button>\n                </div>\n                </div>\n            </div>\n            )}\n\n            {/* Alert Modal */}\n            {alert.isOpen && (\n                <div className=\"overlay\">\n                    <div className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h2>Alert</h2>\n                            <p>{alert.message}</p>\n                            <div className=\"save-container\">\n                                <button onClick={closeAlertModal} className=\"button-save\" title=\"Okay\">\n                                    Okay\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"page__content page__content--with-header page__content--with-bottom-nav\">\n            <h2 className=\"page__title\">Dashboard</h2>\n\n            <div className=\"net\">\n                <div className=\"net-header\">\n                <div className=\"select-wrapper\">\n                    <select value={selectedNet} onChange={handleNetworkChange} className=\"select\">\n                    <option value=\"ResilientDB Mainnet\">ResilientDB Mainnet</option>\n                    <option value=\"ResilientDB Localnet\">ResilientDB Localnet</option>\n                    {nets.map(net => (\n                        <option key={net.name} value={net.name}>{net.name}</option>\n                    ))}\n                    <option value=\"Manage Nets\">Manage Nets</option>\n                    </select>\n                    <i className=\"fas fa-chevron-down\"></i>\n                </div>\n\n                <div className=\"icon-container\" onClick={toggleConnection}>\n                    {faviconUrl ? (\n                    <img\n                        src={faviconUrl}\n                        alt=\"Favicon\"\n                        className={`icon ${isConnected ? 'connected' : ''}`}\n                        onError={handleFaviconError}\n                    />\n                    ) : (\n                    <i className={`fa fa-globe icon ${isConnected ? 'connected' : ''}`} aria-hidden=\"true\"></i>\n                    )}\n                    <span className=\"status-dot\"></span>\n                    <span className=\"tooltip\">{isConnected ? 'Connected' : 'Disconnected'}</span>\n                </div>\n                {selectedNet === 'Custom URL' && (\n                    <input\n                    type=\"text\"\n                    value={customUrl}\n                    onChange={handleCustomUrlChange}\n                    placeholder=\"Enter custom URL\"\n                    className=\"input\"\n                    />\n                )}\n                </div>\n\n                <div className=\"file-upload\">\n                    <div\n                    className={`drag_box_outline ${jsonFileName ? 'file-uploaded' : ''}`}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={handleDragOver}\n                    onDrop={handleDrop}\n                    onClick={handleFileClick}\n                    >\n                    <input\n                        type=\"file\"\n                        ref={fileInputRef}\n                        style={{ display: 'none' }}\n                        accept=\"application/json\"\n                        onChange={handleFileUpload}\n                    />\n                    {jsonFileName ? (\n                        <span className=\"filename\">{jsonFileName} uploaded</span>\n                    ) : (\n                        <span className=\"filename\">Click to Upload JSON File</span>\n                    )}\n                    </div>\n                    {transactionError && <p className=\"error-message\">{transactionError}</p>}\n                </div>\n            </div>\n\n\n            <h2 className=\"page__title\">Select Account</h2>\n            <div className=\"net\">\n                <div className=\"keypair\">\n                    <div className=\"keypair-header\">\n                        <div className=\"select-wrapper\">\n                            <select\n                            value={selectedKeyPairIndex}\n                            onChange={(e) => switchKeyPair(Number(e.target.value))}\n                            className=\"select\"\n                            >\n                            {keyPairs.map((keyPair, index) => (\n                                <option key={index} value={index}>\n                                {`${keyPair.publicKey.slice(0, 4)}...${keyPair.publicKey.slice(-4)}`}\n                                </option>\n                            ))}\n                            </select>\n                            <i className=\"fas fa-chevron-down\"></i>\n                        </div>\n                        <div className=\"keypair-icons\">\n                            {keyPairs.length > 1 && (\n                            <button onClick={() => setShowDeleteModal(true)} className=\"icon-button\" title=\"Delete Key Pair\">\n                                <DeleteIcon style={{ color: 'white' }} />\n                            </button>\n                            )}\n                            <button onClick={handleCopyPublicKey} className=\"icon-button\" title=\"Copy Public Key\">\n                                <ContentCopyIcon style={{ color: isCopied ? 'grey' : 'white' }} />\n                            </button>\n                            <button onClick={handleDownloadKeyPair} className=\"icon-button\" title=\"Download Key Pair\">\n                                <DownloadIcon style={{ color: 'white' }} />\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"keypair-actions\">\n                        <div className=\"button-with-tooltip\">\n                            <button onClick={handleGenerateKeyPair} className=\"badge-button centered-icon\" title=\"Generate Keys\">\n                                <AddCircleOutlineIcon style={{ color: 'white' }} />\n                            </button>\n                            <span className=\"tooltip-text\">Generate Keys</span>\n                        </div>\n                        <div className=\"button-with-tooltip\">\n                            <button onClick={handleDownloadAllKeyPairs} className=\"badge-button centered-icon\" title=\"Export All Keys\">\n                                <SaveAltIcon style={{ color: 'white' }} />\n                            </button>\n                            <span className=\"tooltip-text\">Export All Keys</span>\n                        </div>\n                        <div className=\"button-with-tooltip\">\n                            <button onClick={handleKeyPairFileClick} className=\"badge-button centered-icon\" title=\"Upload Keys\">\n                                <UploadIcon style={{ color: 'white' }} />\n                            </button>\n                            <span className=\"tooltip-text\">Upload Keys</span>\n                        </div>\n                        <input\n                            type=\"file\"\n                            ref={keyPairFileInputRef}\n                            style={{ display: 'none' }}\n                            accept=\"application/json\"\n                            onChange={handleKeyPairFileUpload}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            {showDeleteModal && (\n                <div className=\"modal-overlay\">\n                    <div className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h2>Are you sure?</h2>\n                            <p>This action is irreversible and will delete the selected key pair forever.</p>\n                            <div className=\"save-container\">\n                                <button onClick={handleDeleteKeyPair} className=\"button-save\" title=\"Delete Key Pair\">\n                                    Delete\n                                </button>\n                                <button onClick={() => setShowDeleteModal(false)} className=\"button-close\" title=\"Cancel\">\n                                    Cancel\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <button className=\"button button--full button--main open-popup\" onClick={handleSubmit} title=\"Submit Transaction\">\n                Submit\n            </button>\n            <p className=\"bottom-navigation\" style={{ backgroundColor: 'transparent', display: 'flex', justifyContent: 'center', textShadow: '1px 1px 1px rgba(0, 0, 0, 0.3)', color: 'rgb(255, 255, 255, 0.5)', fontSize: '9px' }}>\n                ResVault v{versionData.version}\n            </p>\n            </div>\n        </div>\n        </>\n    );\n\n}\n\nexport default Dashboard;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*\n*/\n\n\n/*global chrome*/\nimport './css/App.css';\nimport React, { useContext } from 'react';\nimport Home from \"./pages/Home\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Contract from \"./pages/Contract\";\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { GlobalContext } from './context/GlobalContext';\n\nfunction App() {\n  const { serviceMode, isAuthenticated } = useContext(GlobalContext);\n\n  return (\n    <Routes>\n      {!isAuthenticated ? (\n        <>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/signup\" element={<SignUp />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </>\n      ) : serviceMode === 'KV' ? (\n        <>\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"*\" element={<Navigate to=\"/dashboard\" replace />} />\n        </>\n      ) : (\n        <>\n          <Route path=\"/contract\" element={<Contract />} />\n          <Route path=\"*\" element={<Navigate to=\"/contract\" replace />} />\n        </>\n      )}\n    </Routes>\n  );\n}\n\nexport default App;\n","/**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n* \n*   http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.    \n*/\n\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n* \n*   http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.    \n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MemoryRouter } from \"react-router-dom\";\nimport { GlobalProvider } from './context/GlobalContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <MemoryRouter>\n      <GlobalProvider>\n        <App />\n      </GlobalProvider>\n    </MemoryRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/graphql.fc6b9451.png\";"],"sourceRoot":""}